package com.sbm.selfServices.model.services;

import com.sbm.selfServices.model.services.common.SBMModule;


import com.sbm.selfServices.model.views.ro.AllowancesROViewRowImpl;

import com.sbm.selfServices.model.views.ro.CalcTotalMonthsImpl;
import com.sbm.selfServices.model.views.ro.DepartmentsLOVImpl;
import com.sbm.selfServices.model.views.ro.LookUpValuesROVOImpl;
import com.sbm.selfServices.model.views.ro.LookUpValuesViewImpl;
import com.sbm.selfServices.model.views.ro.OvertimeROVOImpl;
import com.sbm.selfServices.model.views.ro.RequestStepsCEOROViewImpl;
import com.sbm.selfServices.model.views.ro.TotalMonthsInYearImpl;
import com.sbm.selfServices.model.views.up.ApprovalHistoryCeoVOImpl;
import com.sbm.selfServices.model.views.up.BusinessTripRequestViewImpl;
import com.sbm.selfServices.model.views.up.BusinessTripRequestViewRowImpl;

import com.sbm.selfServices.model.views.up.ChangePositionViewImpl;
import com.sbm.selfServices.model.views.up.DepartmentsVOImpl;
import com.sbm.selfServices.model.views.up.DeptEmployeesVOImpl;
import com.sbm.selfServices.model.views.up.EducationAllowanceViewImpl;
import com.sbm.selfServices.model.views.up.ElementAccountVOImpl;
import com.sbm.selfServices.model.views.up.ExceptionalRewardViewImpl;
import com.sbm.selfServices.model.views.up.ExitReEntryVOImpl;
import com.sbm.selfServices.model.views.up.GradesVOImpl;
import com.sbm.selfServices.model.views.up.JobsVOImpl;
import com.sbm.selfServices.model.views.up.LoanRequestViewImpl;

import com.sbm.selfServices.model.views.up.ManPowerRequestViewImpl;

import com.sbm.selfServices.model.views.up.ManagerEmployeesVOImpl;
import com.sbm.selfServices.model.views.up.MobileAllowanceRequestUPViewImpl;

import com.sbm.selfServices.model.views.up.PositionsVOImpl;

import com.sbm.selfServices.model.views.up.RepaymentTicketsViewImpl;


import com.sbm.selfServices.model.views.up.RequestStepsCEO_VOImpl;
import com.sbm.selfServices.model.views.up.RequestVisibleSetupVOImpl;
import com.sbm.selfServices.model.views.up.SpecialNeedSupportViewImpl;

import java.sql.Blob;
import java.sql.CallableStatement;
import java.sql.Clob;
import java.sql.SQLException;

import java.sql.Types;

import java.util.ArrayList;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import oracle.jdbc.OracleConnection;

import oracle.sql.CLOB;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 28 08:30:43 EET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SBMModuleImpl extends ApplicationModuleImpl implements SBMModule {
    /**
     * This is the default constructor (do not remove).
     */
    public SBMModuleImpl() {
    }

    /**
     * Container's getter for BusinessTripRequestView.
     * @return BusinessTripRequestView
     */
    public ViewObjectImpl getBusinessTripRequestView() {
        return (ViewObjectImpl)findViewObject("BusinessTripRequestView");
    }

    /**
     * Container's getter for NextRequestStep.
     * @return NextRequestStep
     */
    public ViewObjectImpl getNextRequestStep() {
        return (ViewObjectImpl)findViewObject("NextRequestStep");
    }

    public Row getNextStep(oracle.jbo.domain.Number currentStep,
                           String requestName) {
        System.out.println("current is " + currentStep);
        System.out.println("current requestName is " + requestName);
        ViewObjectImpl nextRequestView = getNextRequestStep();
        nextRequestView.setNamedWhereClauseParam("bind_stepId", currentStep);
        nextRequestView.setNamedWhereClauseParam("bind_requestName",
                                                 requestName);
        nextRequestView.executeQuery();
        Row first = nextRequestView.first();
        return first; //(Number)first.getAttribute("NextStepId");
    }
    
    public oracle.jbo.domain.Number getExitReEntryBT(Date bindDate,
                           String bindPersonNo) {
        System.out.println("bindDate is " + bindDate);
        System.out.println("bindPersonNo is " + bindPersonNo);
        ViewObjectImpl nextRequestView = getExitReEntryRelatedBT1();
        nextRequestView.setNamedWhereClauseParam("bindDate", bindDate);
        nextRequestView.setNamedWhereClauseParam("bindPersonNo",
                                                 bindPersonNo);
        nextRequestView.executeQuery();
      Row first = nextRequestView.first();
      System.err.println("I'm Inside new Method getExitReEntryBT");
      oracle.jbo.domain.Number num =
          (oracle.jbo.domain.Number)first.getAttribute("Num");
        
        return num;
    }
    public String getLastExceptionalRewardDate(
                               String bindPersonNumber) {
            
            System.out.println("bindPersonNumber is " + bindPersonNumber);
            ViewObjectImpl nextRequestView = getLastRewardDate1();
            
            nextRequestView.setNamedWhereClauseParam("bindPersonNumber",
                                                     bindPersonNumber);
            nextRequestView.executeQuery();
          Row first = nextRequestView.first();
          System.err.println("I'm Inside new Method getLastExcepRewardDate");
            String date ="";
          if(first.getAttribute("Lastrewarddate")!=null){
              System.err.println("Ana henaaa 2");
          date =first.getAttribute("Lastrewarddate").toString();
          System.err.println("Returned Date "+date);
          }
            return date;
        }
    
    public void empIsManager(String bindPersonNumber) {
           
            System.out.println("bindPersonNumber is " + bindPersonNumber);
            ViewObjectImpl nextRequestView = getEmpIsManager1();
            
            nextRequestView.setNamedWhereClauseParam("bindPersonNumber",
                                                     bindPersonNumber);
            nextRequestView.executeQuery();
          Row first = nextRequestView.first();
          System.err.println("I'm Inside new Method empIsManager");
          Number numberOfEmps = (Number)first.getAttribute("Num");
             System.err.println("numberOfEmps :"+numberOfEmps);
             
//             if(numberOfEmps.compareTo(0)==1)
//             {
//                 
//                     JSFUtils.setExpressionValue("#{sessionScope.isManagerFlage}",
//                                                 1);
//                 
//                 
//                 }
//             else
//                 
//             {
//                 
//                     JSFUtils.setExpressionValue("#{sessionScope.isManagerFlage}",
//                                                 0);
//                 
//                 }

            
        }
    
    public ArrayList<Row> getBusinessTripDatesToCheckOverlap(String personNumber)

    {
        ViewObjectImpl businessTripDatesView = getCheckDatesOverlapROView();
        businessTripDatesView.setApplyViewCriteriaName("CheckDatesOverlapROViewCriteria");
        businessTripDatesView.setNamedWhereClauseParam("per_number",
                                                       personNumber);
        businessTripDatesView.executeQuery();
        RowSetIterator iterator = businessTripDatesView.getRowSetIterator();

        ArrayList<Row> allReqDates = new ArrayList<Row>();


        while (iterator.hasNext())

        {
            Row currentRow = businessTripDatesView.next();
            //            System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&");
//                        System.out.println("@LocalBusinessTripId is >>"+currentRow.getAttribute("LocalBusinessTripId"));
            //            System.out.println("Start Date  >> "+currentRow.getAttribute("StartDate"));
            //                System.out.println("End Date  >> "+currentRow.getAttribute("EndDate"));
            //            System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&");

            allReqDates.add(currentRow);

        }


        return allReqDates;
    }

    public oracle.jbo.domain.Number getTotalMonthsPerYear(String PersonId) {
        ViewObjectImpl calcTotalMonths1VO = getCalcTotalMonths1();
        calcTotalMonths1VO.setNamedWhereClauseParam("PERSON_ID_BIND",
                                                    PersonId);
        calcTotalMonths1VO.executeQuery();
        Row first = calcTotalMonths1VO.first();
        System.err.println("I'm Inside Method");
        oracle.jbo.domain.Number totalMonthsPerYear =
            (oracle.jbo.domain.Number)first.getAttribute("TotalMonths");

        System.err.println("I'm Inside Method:  totalMonthsPerYear is >>> " +
                           totalMonthsPerYear);

        return totalMonthsPerYear;
    }
    
    public oracle.jbo.domain.Number getTotalAmountSpecialNeed(String PersonNumber) {
        ViewObjectImpl specialNeedTotalAmountVO = getSpecialNeedTotalAmountThisYear1();
        specialNeedTotalAmountVO.setNamedWhereClauseParam("PERSON_NO_BIND",
                                                    PersonNumber);
        specialNeedTotalAmountVO.executeQuery();
        Row first = specialNeedTotalAmountVO.first();
        System.err.println("I'm Inside Method");
        oracle.jbo.domain.Number totalAmountThisYear =
            (oracle.jbo.domain.Number)first.getAttribute("TotalAmount");

        System.err.println("I'm Inside Method:  TotalAmountThisYear is >>> " +
                           totalAmountThisYear);

        return totalAmountThisYear;
    }
    
    public oracle.jbo.domain.Number getTotalAmountEducAllow(String PersonNumber) {
        ViewObjectImpl educAllowTotalAmountVO = getEduAllowTotalAmountThisYear1();
        educAllowTotalAmountVO.setNamedWhereClauseParam("PERSON_NO_BIND",
                                                    PersonNumber);
        educAllowTotalAmountVO.executeQuery();
        Row first = educAllowTotalAmountVO.first();
        System.err.println("I'm Inside Method");
        oracle.jbo.domain.Number totalAmountThisYear =
            (oracle.jbo.domain.Number)first.getAttribute("TotalAmount");

        System.err.println("I'm Inside Method:  TotalAmountThisYear is >>> " +
                           totalAmountThisYear);

        return totalAmountThisYear;
    }

    public oracle.jbo.domain.Number getTotalMonthsInYear(String PersonId) {
        ViewObjectImpl totalMonthsInYearView = getTotalMonthsInYear();
        totalMonthsInYearView.setNamedWhereClauseParam("Bind_Emp_No",
                                                       PersonId);
        totalMonthsInYearView.executeQuery();
        Row first = totalMonthsInYearView.first();
        oracle.jbo.domain.Number totalMonthsInYear = null;
        if (first != null) {
            System.err.println("I'm Inside Method 1");
            totalMonthsInYear =
                    (oracle.jbo.domain.Number)first.getAttribute("TotalMonthsInYear");
            if (totalMonthsInYear != null) {
                System.err.println("I'm Inside Method 2:  totalMonthsInYear is >>> " +
                                   totalMonthsInYear);
            } else {
                System.err.println("I'm Inside Method 3:  totalMonthsInYear is >>> " +
                                   totalMonthsInYear);
                totalMonthsInYear = new oracle.jbo.domain.Number(0);

            }
        }

        else {
            System.err.println("I'm Inside Method 4:  totalMonthsInYear is >>> " +
                               totalMonthsInYear);
            totalMonthsInYear = new oracle.jbo.domain.Number(0);

        }
        return totalMonthsInYear;
    }

    public Row getLoanTotalsRow(String PersonId) {
        ViewObjectImpl totalMonthsInYearView = getTotalMonthsInYear();
        totalMonthsInYearView.setNamedWhereClauseParam("Bind_Emp_No",
                                                       PersonId);
        totalMonthsInYearView.executeQuery();
        Row first = totalMonthsInYearView.first();
        return first;

    }

    public oracle.jbo.domain.Number getTotalhoursPerMonth(String PersonId) {
        ViewObjectImpl calcTotalHoursVO = getTotalHourPerMonVO1();
        calcTotalHoursVO.setNamedWhereClauseParam("PERSON_ID_BIND", PersonId);
        calcTotalHoursVO.executeQuery();
        Row first = calcTotalHoursVO.first();
        System.err.println("I'm Inside Method");
        oracle.jbo.domain.Number totalHoursPerMonth =
            (oracle.jbo.domain.Number)first.getAttribute("Totalhours");

        System.err.println("I'm Inside Method:  TotalHourPerMon is >>> " +
                           totalHoursPerMonth);

        return totalHoursPerMonth;
    }
    
    public oracle.jbo.domain.Number getMobileRequestsThisMonth(String PersonNumber) {
        ViewObjectImpl mobileRequestsThisMonthVO = getMobileRequestsThisMonth1();
        mobileRequestsThisMonthVO.setNamedWhereClauseParam("PERSON_ID_BIND", PersonNumber);
        mobileRequestsThisMonthVO.executeQuery();
        Row first = mobileRequestsThisMonthVO.first();
        System.err.println("I'm Inside Method");
        oracle.jbo.domain.Number requestsThisMonth =
            (oracle.jbo.domain.Number)first.getAttribute("RequestsThisMonth");

        System.err.println("I'm Inside Method:  RequestsThisMonth is >>> " +
                           requestsThisMonth);

        return requestsThisMonth;
    }
    
    public oracle.jbo.domain.Number getTotalConsumedAmountPerYear(String bindPersonNo,Date bindStartOfYear,Date bindEndOfYear) {
        ViewObjectImpl exitReEntryAmountVO = getExitReEntryAmount1();
        exitReEntryAmountVO.setNamedWhereClauseParam("bindPersonNo", bindPersonNo);
        exitReEntryAmountVO.setNamedWhereClauseParam("bindStartOfYear", bindStartOfYear);
        exitReEntryAmountVO.setNamedWhereClauseParam("bindEndOfYear", bindEndOfYear);
        
        exitReEntryAmountVO.executeQuery();
        Row first = exitReEntryAmountVO.first();
        System.err.println("I'm Inside Method");
        oracle.jbo.domain.Number totalConsumedAmountPerYear =
            (oracle.jbo.domain.Number)first.getAttribute("Total");

        System.err.println("I'm Inside Method:  totalConsumedAmountPerYear is >>> " +
                           totalConsumedAmountPerYear);

        return totalConsumedAmountPerYear;
    }


    public oracle.jbo.domain.Number getExitRequestsInSameTravelDate(String bindPersonNo,Date travelDateBind) {
        ViewObjectImpl exitReentryReqSameTravelDateVO = getExitReentryReqSameTravelDate1();
        exitReentryReqSameTravelDateVO.setNamedWhereClauseParam("PERSON_ID_BIND", bindPersonNo);
        exitReentryReqSameTravelDateVO.setNamedWhereClauseParam("TRAVEL_DATE_BIND", travelDateBind);
        
        
        exitReentryReqSameTravelDateVO.executeQuery();
        Row first = exitReentryReqSameTravelDateVO.first();
        System.err.println("I'm Inside Method");
        oracle.jbo.domain.Number exitRequestsInSameTravelDate =
            (oracle.jbo.domain.Number)first.getAttribute("RequestsSameTravelDate");

        System.err.println("I'm Inside Method:  ExitRequestsInSameTravelDate is >>> " +
                           exitRequestsInSameTravelDate);

        return exitRequestsInSameTravelDate;
    }


    /**
     * Container's getter for AllowancesROView.
     * @return AllowancesROView
     */
    public ViewObjectImpl getAllowancesROView() {
        return (ViewObjectImpl)findViewObject("AllowancesROView");
    }

    public void calcAllowances(String tripType, String classType, Number days,
                               String allowanceType) {
        System.out.println("paramter are " + tripType + " " + classType + " " +
                           days + " " + allowanceType);
        ViewObjectImpl allowancesROView = getAllowancesROView();
        BusinessTripRequestViewRowImpl currentRow =
            (BusinessTripRequestViewRowImpl)getBusinessTripRequestView().getCurrentRow();
        if (allowanceType.equals("HOUSING") && days.equals(new Number(1))) {
            currentRow.setHousingAllowanceAmount(new Number(0));
            return;
        }
        allowancesROView.setNamedWhereClauseParam("bind_tripType", tripType);
        allowancesROView.setNamedWhereClauseParam("bind_class", classType);
        allowancesROView.setNamedWhereClauseParam("bind_allowanceType",
                                                  allowanceType);
        allowancesROView.executeQuery();
        System.out.println("esstimanted row count " +
                           allowancesROView.getEstimatedRowCount());
        while (allowancesROView.hasNext()) {
            System.out.println("at while");
            AllowancesROViewRowImpl next =
                (AllowancesROViewRowImpl)allowancesROView.next();
            if (next.getAllowanceType().equalsIgnoreCase("TRANS")) {
                try {
                    currentRow.setTransAllowanceAmount(new Number(next.getAllowanceAmount().doubleValue() *
                                                                  (days.intValue())));
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            } else if (next.getAllowanceType().equalsIgnoreCase("HOUSING")) {

                try {
                    currentRow.setHousingAllowanceAmount(new Number(next.getAllowanceAmount().doubleValue() *
                                                                    (days.doubleValue() -
                                                                     1)));
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            } else if (next.getAllowanceType().equalsIgnoreCase("FOOD")) {
                try {
                    currentRow.setFoodAllowanceAmount(new Number(next.getAllowanceAmount().doubleValue() *
                                                                 (days.intValue())));
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            } else if (next.getAllowanceType().equalsIgnoreCase("LAUNDRY")) {
                try {
                    currentRow.setLaundryAllowanceAmount(new Number(next.getAllowanceAmount().doubleValue() *
                                                                    (days.intValue() /
                                                                     3)));
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * Container's getter for RequestAttachmentsView1.
     * @return RequestAttachmentsView1
     */
    public ViewObjectImpl getRequestAttachmentsView1() {
        return (ViewObjectImpl)findViewObject("RequestAttachmentsView1");
    }

    /**
     * Container's getter for RequestAttachmentsFK1VL1.
     * @return RequestAttachmentsFK1VL1
     */
    public ViewLinkImpl getRequestAttachmentsFK1VL1() {
        return (ViewLinkImpl)findViewLink("RequestAttachmentsFK1VL1");
    }

    /**
     * Container's getter for AllowancesUPView1.
     * @return AllowancesUPView1
     */
    public ViewObjectImpl getAllowancesUPView() {
        return (ViewObjectImpl)findViewObject("AllowancesUPView");
    }

    /**
     * Container's getter for PersonDaysROView.
     * @return PersonDaysROView
     */
    public ViewObjectImpl getPersonDaysROView() {
        return (ViewObjectImpl)findViewObject("PersonDaysROView");
    }

    public void callSendEmailStoredPL(String sender, String receiver,
                                      String subject, String e_body) {
        System.out.println("TEST MAIL " + sender + " " + receiver + " " +
                           subject + " " + e_body);
        CallableStatement st = null;
        try {

            // 1. Create a JDBC CallabledStatement
            st =
 getDBTransaction().createCallableStatement("begin " + "send_email_by_apex (?,?,?,?)" +
                                            ";end;", 0);
            // 4. Set the value of user-supplied bind vars in the stmt
            st.setString(1, sender);
            st.setString(2, receiver);
            st.setString(3, subject);
            String  csspart="<html>\n" + 
                        "<head>\n" + 
                        "<link href='https://fonts.googleapis.com/css?family=Cairo' rel='stylesheet'>\n" + 
                        "<style>\n" + 
                        "   span{\n" + 
                        "           color:#1f3559;\n" + 
                        "           font-family: 'Cairo' !important;\n" + 
                        "           \n" + 
                        "   }\n" + 
                        "   table {\n" + 
                        "     border-collapse: collapse;\n" + 
                        "   }\n" + 
                        "   th{\n" + 
                        "           border: 1px solid #EEE;\n" + 
                        "           color:#1f3559;\n" + 
                        "           font-family: 'Cairo' !important;\n" + 
                        "   }\n" + 
                        "   td{\n" + 
                        "           border: 1px solid #EEE;\n" + 
                        "           font-family: 'Cairo' !important;\n" + 
                        "           color:#1E1E1E;\n" + 
                        "   }\n" + 
                        "   body{\n" + 
                        "           font-family: 'Cairo' !important;\n" + 
                        "           color:#1f3559;\n" + 
                        "   }\n" + 
                        "   b{\n" + 
                        "           color:#1f3559;\n" + 
                        "   }\n" + 
                        "   .tableHeader{\n" + 
                        "           text-align:center;\n" + 
                        "           background-color:#1f3559;\n" + 
                        "           border: 1px solid #EEE;\n" + 
                        "   }\n" + 
                        "   .mailContent{\n" + 
                        "           margin-top:-80px;\n" + 
                        "   }\n" + 
                        "</style>\n" + 
                        "</head>\n" + 
                        "<body>\n" + 
                        "<div style=\"width: 100%;display:inline-block;\">\n";
            String endTag = "</div>\n" + 
                        "<div class=\"mailContent\">\n";
                        String combinedpartMail=csspart+endTag+e_body+ "</div>"+"</body>"+"</html>";
            System.err.println("MAIL:::"+combinedpartMail);
            ClobDomain myClob = new ClobDomain(combinedpartMail);

            st.setCharacterStream(4, myClob.getCharacterStream());
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();

        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    
    public void sendExperienceCertificate(String sender, String receiver,
                                      String subject, String e_body, Integer requestId) {
        System.out.println("params are " + sender + " " + receiver + " " +
                           subject + " " + e_body);
        CallableStatement st = null;
        try {

            // 1. Create a JDBC CallabledStatement
            st =
    getDBTransaction().createCallableStatement("begin " + "send_experience_certificate (?,?,?,?,?)" +
                                            ";end;", 0);
            // 4. Set the value of user-supplied bind vars in the stmt
            st.setString(1, sender);
            st.setString(2, receiver);
            st.setString(3, subject);
            String  csspart="<html>\n" + 
                        "<head>\n" + 
                        "<link href='https://fonts.googleapis.com/css?family=Cairo' rel='stylesheet'>\n" + 
                        "<style>\n" + 
                        "   span{\n" + 
                        "           color:#1f3559;\n" + 
                        "           font-family: 'Cairo' !important;\n" + 
                        "           \n" + 
                        "   }\n" + 
                        "   table {\n" + 
                        "     border-collapse: collapse;\n" + 
                        "   }\n" + 
                        "   th{\n" + 
                        "           border: 1px solid #EEE;\n" + 
                        "           color:#1f3559;\n" + 
                        "           font-family: 'Cairo' !important;\n" + 
                        "   }\n" + 
                        "   td{\n" + 
                        "           border: 1px solid #EEE;\n" + 
                        "           font-family: 'Cairo' !important;\n" + 
                        "           color:#1E1E1E;\n" + 
                        "   }\n" + 
                        "   body{\n" + 
                        "           font-family: 'Cairo' !important;\n" + 
                        "           color:#1f3559;\n" + 
                        "   }\n" + 
                        "   b{\n" + 
                        "           color:#1f3559;\n" + 
                        "   }\n" + 
                        "   .tableHeader{\n" + 
                        "           text-align:center;\n" + 
                        "           background-color:#1f3559;\n" + 
                        "           border: 1px solid #EEE;\n" + 
                        "   }\n" + 
                        "   .mailContent{\n" + 
                        "           margin-top:-80px;\n" + 
                        "   }\n" + 
                        "</style>\n" + 
                        "</head>\n" + 
                        "<body>\n" + 
                        "<div style=\"width: 100%;display:inline-block;\">\n";
            String endTag = "</div>\n" + 
                        "<div class=\"mailContent\">\n";
                        String combinedpartMail=csspart+endTag+e_body+ "</div>"+"</body>"+"</html>";

            ClobDomain myClob = new ClobDomain(combinedpartMail);

            st.setCharacterStream(4, myClob.getCharacterStream());
            st.setInt(5, requestId);
            
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();

        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    
    public void sendTrainingCertificate(Integer requestId) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin " + "send_training_certificate (?)" +
                                            ";end;", 0);
            st.setInt(1, requestId);
            st.executeUpdate();

        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * Container's getter for CsecretaryROView1.
     * @return CsecretaryROView1
     */
    public ViewObjectImpl getCsecretaryROView() {
        return (ViewObjectImpl)findViewObject("CsecretaryROView");
    }

    /**
     * Container's getter for CsecretaryUPView.
     * @return CsecretaryUPView
     */
    public ViewObjectImpl getCsecretaryUPView() {
        return (ViewObjectImpl)findViewObject("CsecretaryUPView");
    }

    /**
     * Container's getter for MobileAllowanceRequestUPView1.
     * @return MobileAllowanceRequestUPView1
     */
    public ViewObjectImpl getMobileAllowanceRequestUPView() {
        return (ViewObjectImpl)findViewObject("MobileAllowanceRequestUPView");
    }

    public void changeExpenseFlag(Number localBusinessTripId) {
        String entityName =
            "com.sbm.selfServices.model.entities.BusinessTripRequest";
        // 1. Find the entity definition for the BusinessTripRequest entity
        EntityDefImpl bTripDef = EntityDefImpl.findDefObject(entityName);
        // 2. Create the key
        Key bTripKey = new Key(new Object[] { localBusinessTripId });
        // 3. Find the entity object instance using the key
        EntityImpl bTrip =
            bTripDef.findByPrimaryKey(getDBTransaction(), bTripKey);
        if (bTrip != null) {
            // 4. change the attribute of the BusinessTripRequest
            bTrip.setAttribute("ExpenseFlag", "Y");
        }
    }
    
    public void changeExpenseFlagToNo(Number localBusinessTripId) {
        String entityName =
            "com.sbm.selfServices.model.entities.BusinessTripRequest";
        // 1. Find the entity definition for the BusinessTripRequest entity
        EntityDefImpl bTripDef = EntityDefImpl.findDefObject(entityName);
        // 2. Create the key
        Key bTripKey = new Key(new Object[] { localBusinessTripId });
        // 3. Find the entity object instance using the key
        EntityImpl bTrip =
            bTripDef.findByPrimaryKey(getDBTransaction(), bTripKey);
        if (bTrip != null) {
            // 4. change the attribute of the BusinessTripRequest
            bTrip.setAttribute("ExpenseFlag", "N");
        }
    }

    /**
     * Container's getter for OvertimeRequestView1.
     * @return OvertimeRequestView1
     */
    public ViewObjectImpl getOvertimeRequestView() {
        return (ViewObjectImpl)findViewObject("OvertimeRequestView");
    }

    /**
     * Container's getter for OvertimeAttachmentsView1.
     * @return OvertimeAttachmentsView1
     */
    public ViewObjectImpl getOvertimeAttachmentsView() {
        return (ViewObjectImpl)findViewObject("OvertimeAttachmentsView");
    }

    /**
     * Container's getter for OvertimeAttachVL1.
     * @return OvertimeAttachVL1
     */
    public ViewLinkImpl getOvertimeAttachVL1() {
        return (ViewLinkImpl)findViewLink("OvertimeAttachVL1");
    }

    /**
     * Container's getter for LoanRequestView1.
     * @return LoanRequestView1
     */
    public ViewObjectImpl getLoanRequestView() {
        return (ViewObjectImpl)findViewObject("LoanRequestView");
    }

    /**
     * Container's getter for LoanAttachmentsView1.
     * @return LoanAttachmentsView1
     */
    public ViewObjectImpl getLoanAttachmentsView() {
        return (ViewObjectImpl)findViewObject("LoanAttachmentsView");
    }

    /**
     * Container's getter for LoanAttachmentsLoanReqFk1Link1.
     * @return LoanAttachmentsLoanReqFk1Link1
     */
    public ViewLinkImpl getLoanAttachmentsLoanReqFk1Link1() {
        return (ViewLinkImpl)findViewLink("LoanAttachmentsLoanReqFk1Link1");
    }

    /**
     * Container's getter for CalcTotalMonths1.
     * @return CalcTotalMonths1
     */
    public ViewObjectImpl getCalcTotalMonths1() {
        return (ViewObjectImpl)findViewObject("CalcTotalMonths1");
    }

    /**
     * Container's getter for TotalHourPerMonVO1.
     * @return TotalHourPerMonVO1
     */
    public ViewObjectImpl getTotalHourPerMonVO1() {
        return (ViewObjectImpl)findViewObject("TotalHourPerMonVO1");
    }

    /**
     * Container's getter for DepartmentsLOV1.
     * @return DepartmentsLOV1
     */
    public ViewObjectImpl getDepartmentsLOV1() {
        return (ViewObjectImpl)findViewObject("DepartmentsLOV1");
    }

    public void deleteDeptTableRows() {

        ViewObjectImpl deptView = this.getDepartmentsVO1();
        RowSetIterator deptRowSetIterator =
            deptView.createRowSetIterator("dept");
        while (deptRowSetIterator.hasNext()) {

            deptRowSetIterator.next().remove();

        }

        getDBTransaction().commit();
        deptRowSetIterator.closeRowSetIterator();
    }
    
    public void deleteAllLocations() {

        ViewObjectImpl voImpl = this.getLocationsVO();
        RowSetIterator rsItr =
            voImpl.createRowSetIterator("locations");
        while (rsItr.hasNext()) {
            rsItr.next().remove();
        }
        getDBTransaction().commit();
        rsItr.closeRowSetIterator();
    }
    
    public void deleteMngrEmpsTableRows() {

        ViewObjectImpl mngrEmpstView = this.getManagerEmployeesVO1();
        RowSetIterator mngrEmpsRowSetIterator =
            mngrEmpstView.createRowSetIterator("mngrEmps");
        while (mngrEmpsRowSetIterator.hasNext()) {

            mngrEmpsRowSetIterator.next().remove();

        }

        getDBTransaction().commit();
        mngrEmpsRowSetIterator.closeRowSetIterator();
    }
    
    public void deletePositionsTableRows() {

        ViewObjectImpl positionsView = this.getPositionsVO1();
        RowSetIterator positionsRowSetIterator =
            positionsView.createRowSetIterator("position");
        while (positionsRowSetIterator.hasNext()) {

            positionsRowSetIterator.next().remove();

        }

        getDBTransaction().commit();
        positionsRowSetIterator.closeRowSetIterator();
    }

    public void deleteGradesTableRows() {

        ViewObjectImpl gradesView = this.getGradesVO1();
        RowSetIterator gradesRowSetIterator =
            gradesView.createRowSetIterator("grades");
        while (gradesRowSetIterator.hasNext()) {

            gradesRowSetIterator.next().remove();

        }

        getDBTransaction().commit();
        gradesRowSetIterator.closeRowSetIterator();
    }

    public void deleteJobsTableRows() {

        ViewObjectImpl JobsView = this.getJobsVO1();
        RowSetIterator jobsRowSetIterator =
            JobsView.createRowSetIterator("jobs");
        while (jobsRowSetIterator.hasNext()) {

            jobsRowSetIterator.next().remove();

        }

        getDBTransaction().commit();
        jobsRowSetIterator.closeRowSetIterator();
    }
    
    public void deleteDeptEmployeesTableRows() {

        ViewObjectImpl deptEmpsView = this.getDeptEmployeesVO1();
        RowSetIterator deptEmpsRowSetIterator =
            deptEmpsView.createRowSetIterator("deptEmp");
        while (deptEmpsRowSetIterator.hasNext()) {

            deptEmpsRowSetIterator.next().remove();

        }

        getDBTransaction().commit();
        deptEmpsRowSetIterator.closeRowSetIterator();
    }


    /**
     * Container's getter for CheckDatesOverlapROView1.
     * @return CheckDatesOverlapROView1
     */
    public ViewObjectImpl getCheckDatesOverlapROView() {
        return (ViewObjectImpl)findViewObject("CheckDatesOverlapROView");
    }

    /**
     * Container's getter for TotalMonthsInYear1.
     * @return TotalMonthsInYear1
     */
    public ViewObjectImpl getTotalMonthsInYear() {
        return (ViewObjectImpl)findViewObject("TotalMonthsInYear");
    }


    /**
     * Container's getter for ManPowerRequestView1.
     * @return ManPowerRequestView1
     */
    public ViewObjectImpl getManPowerRequestView() {
        return (ViewObjectImpl)findViewObject("ManPowerRequestView");
    }

    /**
     * Container's getter for GradesVO1.
     * @return GradesVO1
     */
    public ViewObjectImpl getGradesVO1() {
        return (ViewObjectImpl)findViewObject("GradesVO1");
    }

    /**
     * Container's getter for JobsVO1.
     * @return JobsVO1
     */
    public ViewObjectImpl getJobsVO1() {
        return (ViewObjectImpl)findViewObject("JobsVO1");
    }

    /**
     * Container's getter for ManpowerAttachmentsEOView1.
     * @return ManpowerAttachmentsEOView1
     */
    public ViewObjectImpl getManpowerAttachmentsEOView1() {
        return (ViewObjectImpl)findViewObject("ManpowerAttachmentsEOView1");
    }

    /**
     * Container's getter for ManpowerAttachmentsFk1Link1.
     * @return ManpowerAttachmentsFk1Link1
     */
    public ViewLinkImpl getManpowerAttachmentsFk1Link1() {
        return (ViewLinkImpl)findViewLink("ManpowerAttachmentsFk1Link1");
    }

    /**
     * Container's getter for ExitReEntryVO1.
     * @return ExitReEntryVO1
     */
    public ViewObjectImpl getExitReEntryVO1() {
        return (ViewObjectImpl)findViewObject("ExitReEntryVO1");
    }

    /**
     * Container's getter for DeptEmployeesVO1.
     * @return DeptEmployeesVO1
     */
    public DeptEmployeesVOImpl getDeptEmployeesVO1() {
        return (DeptEmployeesVOImpl)findViewObject("DeptEmployeesVO1");
    }

    /**
     * Container's getter for ExitReEntryAmount1.
     * @return ExitReEntryAmount1
     */
    public ViewObjectImpl getExitReEntryAmount1() {
        return (ViewObjectImpl)findViewObject("ExitReEntryAmount1");
    }

    /**
     * Container's getter for ChangePositionView1.
     * @return ChangePositionView1
     */
    public ViewObjectImpl getChangePositionView1() {
        return (ViewObjectImpl)findViewObject("ChangePositionView1");
    }

    /**
     * Container's getter for EducationAllowanceView1.
     * @return EducationAllowanceView1
     */
    public ViewObjectImpl getEducationAllowanceView1() {
        return (ViewObjectImpl)findViewObject("EducationAllowanceView1");
    }

    /**
     * Container's getter for EducationAllowanceAttachView1.
     * @return EducationAllowanceAttachView1
     */
    public ViewObjectImpl getEducationAllowanceAttachView1() {
        return (ViewObjectImpl)findViewObject("EducationAllowanceAttachView1");
    }

    /**
     * Container's getter for EducationAllowanceAttacFk1Link1.
     * @return EducationAllowanceAttacFk1Link1
     */
    public ViewLinkImpl getEducationAllowanceAttacFk1Link1() {
        return (ViewLinkImpl)findViewLink("EducationAllowanceAttacFk1Link1");
    }

    /**
     * Container's getter for ExceptionalRewardView1.
     * @return ExceptionalRewardView1
     */
    public ViewObjectImpl getExceptionalRewardView1() {
        return (ViewObjectImpl)findViewObject("ExceptionalRewardView1");
    }

    /**
     * Container's getter for ExceptionalRewardAttachmentsView1.
     * @return ExceptionalRewardAttachmentsView1
     */
    public ViewObjectImpl getExceptionalRewardAttachmentsView1() {
        return (ViewObjectImpl)findViewObject("ExceptionalRewardAttachmentsView1");
    }

    /**
     * Container's getter for ExceptionalRewardAttachFk1Link1.
     * @return ExceptionalRewardAttachFk1Link1
     */
    public ViewLinkImpl getExceptionalRewardAttachFk1Link1() {
        return (ViewLinkImpl)findViewLink("ExceptionalRewardAttachFk1Link1");
    }

    /**
     * Container's getter for RepaymentTicketsView1.
     * @return RepaymentTicketsView1
     */
    public ViewObjectImpl getRepaymentTicketsView1() {
        return (ViewObjectImpl)findViewObject("RepaymentTicketsView1");
    }

    /**
     * Container's getter for SpecialNeedSupportView1.
     * @return SpecialNeedSupportView1
     */
    public ViewObjectImpl getSpecialNeedSupportView1() {
        return (ViewObjectImpl)findViewObject("SpecialNeedSupportView1");
    }

    /**
     * Container's getter for SpecialNeedAttachmentsView1.
     * @return SpecialNeedAttachmentsView1
     */
    public ViewObjectImpl getSpecialNeedAttachmentsView1() {
        return (ViewObjectImpl)findViewObject("SpecialNeedAttachmentsView1");
    }

    /**
     * Container's getter for SpecialNeedAttachmentsFk1Link1.
     * @return SpecialNeedAttachmentsFk1Link1
     */
    public ViewLinkImpl getSpecialNeedAttachmentsFk1Link1() {
        return (ViewLinkImpl)findViewLink("SpecialNeedAttachmentsFk1Link1");
    }

    /**
     * Container's getter for PositionsVO1.
     * @return PositionsVO1
     */
    public PositionsVOImpl getPositionsVO1() {
        return (PositionsVOImpl)findViewObject("PositionsVO1");
    }

    /**
     * Container's getter for SpecialNeedTotalAmountThisYear1.
     * @return SpecialNeedTotalAmountThisYear1
     */
    public ViewObjectImpl getSpecialNeedTotalAmountThisYear1() {
        return (ViewObjectImpl)findViewObject("SpecialNeedTotalAmountThisYear1");
    }

    /**
     * Container's getter for EduAllowTotalAmountThisYear1.
     * @return EduAllowTotalAmountThisYear1
     */
    public ViewObjectImpl getEduAllowTotalAmountThisYear1() {
        return (ViewObjectImpl)findViewObject("EduAllowTotalAmountThisYear1");
    }

    /**
     * Container's getter for ManagerEmployeesVO1.
     * @return ManagerEmployeesVO1
     */
    public ViewObjectImpl getManagerEmployeesVO1() {
        return (ViewObjectImpl)findViewObject("ManagerEmployeesVO1");
    }

    /**
     * Container's getter for MobileRequestsThisMonth1.
     * @return MobileRequestsThisMonth1
     */
    public ViewObjectImpl getMobileRequestsThisMonth1() {
        return (ViewObjectImpl)findViewObject("MobileRequestsThisMonth1");
    }

    /**
     * Container's getter for ExitReentryReqSameTravelDate1.
     * @return ExitReentryReqSameTravelDate1
     */
    public ViewObjectImpl getExitReentryReqSameTravelDate1() {
        return (ViewObjectImpl)findViewObject("ExitReentryReqSameTravelDate1");
    }

    /**
     * Container's getter for BusinessTripRequestReportsVO1.
     * @return BusinessTripRequestReportsVO1
     */
    public ViewObjectImpl getBusinessTripRequestReportsVO1() {
        return (ViewObjectImpl)findViewObject("BusinessTripRequestReportsVO1");
    }

    /**
     * Container's getter for BtHistoryReportsVO1.
     * @return BtHistoryReportsVO1
     */
    public ViewObjectImpl getBtHistoryReportsVO1() {
        return (ViewObjectImpl)findViewObject("BtHistoryReportsVO1");
    }

    /**
     * Container's getter for BtHistoryBusinessTripFk1Link1.
     * @return BtHistoryBusinessTripFk1Link1
     */
    public ViewLinkImpl getBtHistoryBusinessTripFk1Link1() {
        return (ViewLinkImpl)findViewLink("BtHistoryBusinessTripFk1Link1");
    }

    /**
     * Container's getter for ExitReEntryRelatedBT1.
     * @return ExitReEntryRelatedBT1
     */
    public ViewObjectImpl getExitReEntryRelatedBT1() {
        return (ViewObjectImpl)findViewObject("ExitReEntryRelatedBT1");
    }

    /**
     * Container's getter for ExitReEntryAttachView1.
     * @return ExitReEntryAttachView1
     */
    public ViewObjectImpl getExitReEntryAttachView1() {
        return (ViewObjectImpl)findViewObject("ExitReEntryAttachView1");
    }

    /**
     * Container's getter for ExitReentryAttachVL1.
     * @return ExitReentryAttachVL1
     */
    public ViewLinkImpl getExitReentryAttachVL1() {
        return (ViewLinkImpl)findViewLink("ExitReentryAttachVL1");
    }

    /**
     * Container's getter for LastRewardDate1.
     * @return LastRewardDate1
     */
    public ViewObjectImpl getLastRewardDate1() {
        return (ViewObjectImpl)findViewObject("LastRewardDate1");
    }

    /**
     * Container's getter for EmpIsManager1.
     * @return EmpIsManager1
     */
    public ViewObjectImpl getEmpIsManager1() {
        return (ViewObjectImpl)findViewObject("EmpIsManager1");
    }

    /**
     * Container's getter for PendingLoanROVO1.
     * @return PendingLoanROVO1
     */
    public ViewObjectImpl getPendingLoanROVO1() {
        return (ViewObjectImpl)findViewObject("PendingLoanROVO1");
    }
	
	/**
     * Container's getter for PendingForApprovalROVO1.
     * @return PendingForApprovalROVO1
     */
    public ViewObjectImpl getPendingForApprovalROVO1() {
        return (ViewObjectImpl)findViewObject("PendingForApprovalROVO1");
    }

    /**
     * Container's getter for BudgetValidationStepsVO1.
     * @return BudgetValidationStepsVO1
     */
    public ViewObjectImpl getBudgetValidationStepsVO() {
        return (ViewObjectImpl)findViewObject("BudgetValidationStepsVO");
    }

    /**
     * Container's getter for RequestTypesROVO1.
     * @return RequestTypesROVO1
     */
    public ViewObjectImpl getRequestTypesROVO() {
        return (ViewObjectImpl)findViewObject("RequestTypesROVO");
    }

    /**
     * Container's getter for RequestTypesROVO1.
     * @return RequestTypesROVO1
     */
    public ViewObjectImpl getRequestTypesROVO1() {
        return (ViewObjectImpl)findViewObject("RequestTypesROVO1");
    }

    /**
     * Container's getter for BudgetValidationROVO1.
     * @return BudgetValidationROVO1
     */
    public ViewObjectImpl getBudgetValidationROVO() {
        return (ViewObjectImpl)findViewObject("BudgetValidationROVO");
    }

    /**
     * Container's getter for ManPowerTypeFilter1.
     * @return ManPowerTypeFilter1
     */
    public ViewObjectImpl getManPowerTypeFilter() {
        return (ViewObjectImpl)findViewObject("ManPowerTypeFilter");
    }

    /**
     * Container's getter for DifferenceDateDepartment1.
     * @return DifferenceDateDepartment1
     */
    public ViewObjectImpl getDifferenceDateDepartment() {
        return (ViewObjectImpl)findViewObject("DifferenceDateDepartment");
    }


    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryVO() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryVO");
    }

    /**
     * Container's getter for ApprovalHistoryVL1.
     * @return ApprovalHistoryVL1
     */
    public ViewLinkImpl getApprovalHistoryVL1() {
        return (ViewLinkImpl)findViewLink("ApprovalHistoryVL1");
    }

    public String callApprovalHistory(int req_id,String req_type,int prev_step_id,int step_id,String assignee_name,String approval_flow,String final_approval_flow, String approval_type) {
      String value=null;
        try {
        CallableStatement cs =
                       this.getDBTransaction().createCallableStatement("{call approval_history_proc(?,?,?,?,?,?,?,?,?)}",1);
            
        cs.setInt(1, req_id);  
        cs.setString(2, req_type);
        cs.setInt(3, prev_step_id);
        cs.setInt(4, step_id);
        cs.setString(5, assignee_name);
        cs.setString(6, approval_flow);
        cs.setString(7, final_approval_flow);
        cs.setString(8, approval_type);
        cs.registerOutParameter(9, Types.VARCHAR);
        cs.execute();
        value=cs.getString(9);
    }
        catch(Exception e) {
            e.printStackTrace();
        }
        return value;
    }
    
    public String callApprovalHistory(int req_id,String req_type,int prev_step_id,int step_id,String assignee_name,String approval_flow,String final_approval_flow) {
      String value=null;
        try {
        CallableStatement cs =
                       this.getDBTransaction().createCallableStatement("{call approval_history_proc(?,?,?,?,?,?,?,?,?)}",1);
            
        cs.setInt(1, req_id);  
        cs.setString(2, req_type);
        cs.setInt(3, prev_step_id);
        cs.setInt(4, step_id);
        cs.setString(5, assignee_name);
        cs.setString(6, approval_flow);
        cs.setString(7, final_approval_flow);
        cs.setString(8, "");
        cs.registerOutParameter(9, Types.VARCHAR);
        cs.execute();
        value=cs.getString(9);
    }
        catch(Exception e) {
            e.printStackTrace();
        }
        return value;
    }
    
    public String callDelegateProcess(int req_id, int step_id, String req_name, String assigneeName, String assignee, String actionType, String approvalType) {
        
      String result=null;
        try {
        CallableStatement cs =
                       this.getDBTransaction().createCallableStatement("{CALL DELEGATE_REQUEST(?,?,?,?,?,?,?,?)}",1);
            
        cs.setInt(1, req_id);
        cs.setInt(2, step_id);  
        cs.setString(3, req_name);
        cs.setString(4, assigneeName);
        cs.setString(5, assignee);
        cs.setString(6, actionType);
        cs.setString(7, approvalType);
            
        cs.registerOutParameter(8, Types.VARCHAR);
        cs.execute();
        result = cs.getString(8);
    }
        catch(Exception e) {
            e.printStackTrace();
        }
        return result;
    }

    /**
     * Container's getter for DepartmentsVO1.
     * @return DepartmentsVO1
     */
    public DepartmentsVOImpl getDepartmentsVO1() {
        return (DepartmentsVOImpl)findViewObject("DepartmentsVO1");
    }


    /**
     * Container's getter for CheckOverLapOverTimeROVO1.
     * @return CheckOverLapOverTimeROVO1
     */
    public ViewObjectImpl getCheckOverLapOverTimeROVO() {
        return (ViewObjectImpl)findViewObject("CheckOverLapOverTimeROVO");
    }


    /**
     * Container's getter for CheckOverlapROVO1.
     * @return CheckOverlapROVO1
     */
    public ViewObjectImpl getCheckOverlapROVO() {
        return (ViewObjectImpl)findViewObject("CheckOverlapROVO");
    }

    /**
     * Container's getter for OverTimeLineVo1.
     * @return OverTimeLineVo1
     */
    public ViewObjectImpl getOverTimeLineVo() {
        return (ViewObjectImpl)findViewObject("OverTimeLineVo");
    }

    /**
     * Container's getter for OverTimeLineVL1.
     * @return OverTimeLineVL1
     */
    public ViewLinkImpl getOverTimeLineVL1() {
        return (ViewLinkImpl)findViewLink("OverTimeLineVL1");
    }

    /**
     * Container's getter for CitiesLOV1.
     * @return CitiesLOV1
     */
    public ViewObjectImpl getCitiesLOV() {
        return (ViewObjectImpl)findViewObject("CitiesLOV");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryBusiness() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryBusiness");
    }

    /**
     * Container's getter for BusinessTripApprovalVL1.
     * @return BusinessTripApprovalVL1
     */
    public ViewLinkImpl getBusinessTripApprovalVL1() {
        return (ViewLinkImpl)findViewLink("BusinessTripApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryEducation() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryEducation");
    }

    /**
     * Container's getter for EducationApprovalVL1.
     * @return EducationApprovalVL1
     */
    public ViewLinkImpl getEducationApprovalVL1() {
        return (ViewLinkImpl)findViewLink("EducationApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryMobile() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryMobile");
    }

    /**
     * Container's getter for MobileAllowanceApprovalVL1.
     * @return MobileAllowanceApprovalVL1
     */
    public ViewLinkImpl getMobileAllowanceApprovalVL1() {
        return (ViewLinkImpl)findViewLink("MobileAllowanceApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryLoan() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryLoan");
    }

    /**
     * Container's getter for LoanApprovalVL1.
     * @return LoanApprovalVL1
     */
    public ViewLinkImpl getLoanApprovalVL1() {
        return (ViewLinkImpl)findViewLink("LoanApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryOverTime() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryOverTime");
    }

    /**
     * Container's getter for OverTimeApprovalVL1.
     * @return OverTimeApprovalVL1
     */
    public ViewLinkImpl getOverTimeApprovalVL1() {
        return (ViewLinkImpl)findViewLink("OverTimeApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryExit() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryExit");
    }

    /**
     * Container's getter for ExitReEntryApprovalVL1.
     * @return ExitReEntryApprovalVL1
     */
    public ViewLinkImpl getExitReEntryApprovalVL1() {
        return (ViewLinkImpl)findViewLink("ExitReEntryApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryReward() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryReward");
    }

    /**
     * Container's getter for ExceptionalRewardApprovalVL1.
     * @return ExceptionalRewardApprovalVL1
     */
    public ViewLinkImpl getExceptionalRewardApprovalVL1() {
        return (ViewLinkImpl)findViewLink("ExceptionalRewardApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryChangePosition() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryChangePosition");
    }

    /**
     * Container's getter for ChangePositionApprovalVL1.
     * @return ChangePositionApprovalVL1
     */
    public ViewLinkImpl getChangePositionApprovalVL1() {
        return (ViewLinkImpl)findViewLink("ChangePositionApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryRepayment() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryRepayment");
    }

    /**
     * Container's getter for RepaymentApprovalVL1.
     * @return RepaymentApprovalVL1
     */
    public ViewLinkImpl getRepaymentApprovalVL1() {
        return (ViewLinkImpl)findViewLink("RepaymentApprovalVL1");
    }

    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistorySpecialNeed() {
        return (ViewObjectImpl)findViewObject("ApprovalHistorySpecialNeed");
    }

    /**
     * Container's getter for SpecialNeedApprovalVL1.
     * @return SpecialNeedApprovalVL1
     */
    public ViewLinkImpl gets() {
        return (ViewLinkImpl)findViewLink("s");
    }

    /**
     * Container's getter for RequestTypesVO1.
     * @return RequestTypesVO1
     */
    public ViewObjectImpl getRequestTypesEmailNotifyVO() {
        return (ViewObjectImpl)findViewObject("RequestTypesEmailNotifyVO");
    }

    /**
     * Container's getter for RequestVisibleROVO1.
     * @return RequestVisibleROVO1
     */
    public ViewObjectImpl getRequestVisibleROVO() {
        return (ViewObjectImpl)findViewObject("RequestVisibleROVO");
    }

    /**
     * Container's getter for RequestTypesVO1.
     * @return RequestTypesVO1
     */
    public ViewObjectImpl getRequestVisible_VO() {
        return (ViewObjectImpl)findViewObject("RequestVisible_VO");
    }


    /**
     * Container's getter for DifferenceDateLocation1.
     * @return DifferenceDateLocation1
     */
    public ViewObjectImpl getDifferenceDateLocation() {
        return (ViewObjectImpl)findViewObject("DifferenceDateLocation");
    }


    /**
     * Container's getter for RequestVisibleSetupVO2.
     * @return RequestVisibleSetupVO2
     */
    public ViewObjectImpl getRequestVisibleSetupVO1() {
        return (ViewObjectImpl)findViewObject("RequestVisibleSetupVO1");
    }

    /**
     * Container's getter for RequestSteps_VO1.
     * @return RequestSteps_VO1
     */
    public ViewObjectImpl getApproverSteps_VO1() {
        return (ViewObjectImpl)findViewObject("ApproverSteps_VO1");
    }

    /**
     * Container's getter for LocationsVO1.
     * @return LocationsVO1
     */
    public ViewObjectImpl getLocationsVO() {
        return (ViewObjectImpl)findViewObject("LocationsVO");
    }

    /**
     * Container's getter for LocationsVO1.
     * @return LocationsVO1
     */
    public ViewObjectImpl getLocationsVORef() {
        return (ViewObjectImpl)findViewObject("LocationsVORef");
    }

    /**
     * Container's getter for LoanSettlement_VO1.
     * @return LoanSettlement_VO1
     */
    public ViewObjectImpl getLoanSettlement_VO() {
        return (ViewObjectImpl)findViewObject("LoanSettlement_VO");
    }


    /**
     * Container's getter for ApprovalHistoryVO1.
     * @return ApprovalHistoryVO1
     */
    public ViewObjectImpl getApprovalHistoryVO1() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryVO1");
    }

    /**
     * Container's getter for LoanSettlementApproval_VL1.
     * @return LoanSettlementApproval_VL1
     */
    public ViewLinkImpl getLoanSettlementApproval_VL1() {
        return (ViewLinkImpl)findViewLink("LoanSettlementApproval_VL1");
    }

    /**
     * Container's getter for GetLoanDetailsByUser1.
     * @return GetLoanDetailsByUser1
     */
    public ViewObjectImpl getGetLoanDetailsByUser() {
        return (ViewObjectImpl)findViewObject("GetLoanDetailsByUser");
    }
    
    /**
     * Method to return user's last loan details
     * @return Row
     */
    public Row getLastLoanDetails(String personNumber) {
        System.out.println("personNumber is " + personNumber); 
        
        ViewObjectImpl nextRequestView = this.getGetLoanDetailsByUser();
        nextRequestView.setNamedWhereClauseParam("BV_PERSON", personNumber); 
        nextRequestView.executeQuery();
        Row first = nextRequestView.first();
        return first;
    }

    /**
     * Container's getter for WithdrawEditVisible_ROVO1.
     * @return WithdrawEditVisible_ROVO1
     */
    public ViewObjectImpl getWithdrawEditVisible_ROVO1() {
        return (ViewObjectImpl)findViewObject("WithdrawEditVisible_ROVO1");
    }

    /**
     * Container's getter for BusinessTripStatusCount_ROVO1.
     * @return BusinessTripStatusCount_ROVO1
     */
    public ViewObjectImpl getBTStatusCount_ROVO() {
        return (ViewObjectImpl)findViewObject("BTStatusCount_ROVO");
    }

    /**
     * Container's getter for MobileAllowanceStatusCount_ROVO1.
     * @return MobileAllowanceStatusCount_ROVO1
     */
    public ViewObjectImpl getStatusCount_Mobile_ROVO1() {
        return (ViewObjectImpl)findViewObject("StatusCount_Mobile_ROVO1");
    }

    /**
     * Container's getter for StatusCount_LoanRequest_ROVO1.
     * @return StatusCount_LoanRequest_ROVO1
     */
    public ViewObjectImpl getStatusCount_LoanRequest_ROVO1() {
        return (ViewObjectImpl)findViewObject("StatusCount_LoanRequest_ROVO1");
    }

    /**
     * Container's getter for StatusCount_LoanSettlement_ROVO1.
     * @return StatusCount_LoanSettlement_ROVO1
     */
    public ViewObjectImpl getStatusCount_LoanSettlement_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_LoanSettlement_ROVO");
    }

    /**
     * Container's getter for StatusCount_ManPower_ROVO1.
     * @return StatusCount_ManPower_ROVO1
     */
    public ViewObjectImpl getStatusCount_ManPower_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_ManPower_ROVO");
    }

    /**
     * Container's getter for StatusCount_OverTime_ROVO1.
     * @return StatusCount_OverTime_ROVO1
     */
    public ViewObjectImpl getStatusCount_OverTime_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_OverTime_ROVO");
    }

    /**
     * Container's getter for StatusCount_ExitReEntry_ROVO1.
     * @return StatusCount_ExitReEntry_ROVO1
     */
    public ViewObjectImpl getStatusCount_ExitReEntry_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_ExitReEntry_ROVO");
    }

    /**
     * Container's getter for StatusCount_ChanePosition_ROVO1.
     * @return StatusCount_ChanePosition_ROVO1
     */
    public ViewObjectImpl getStatusCount_ChanePosition_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_ChanePosition_ROVO");
    }

    /**
     * Container's getter for StatusCount_Education_ROVO1.
     * @return StatusCount_Education_ROVO1
     */
    public ViewObjectImpl getStatusCount_Education_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_Education_ROVO");
    }

    /**
     * Container's getter for StatusCount_ExceRewards_ROVO1.
     * @return StatusCount_ExceRewards_ROVO1
     */
    public ViewObjectImpl getStatusCount_ExceRewards_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_ExceRewards_ROVO");
    }

    /**
     * Container's getter for StatusCount_SpecialNeed_ROVO1.
     * @return StatusCount_SpecialNeed_ROVO1
     */
    public ViewObjectImpl getStatusCount_SpecialNeed_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_SpecialNeed_ROVO");
    }

    /**
     * Container's getter for StatusCount_Repayment_ROVO1.
     * @return StatusCount_Repayment_ROVO1
     */
    public ViewObjectImpl getStatusCount_Repayment_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_Repayment_ROVO");
    }

    /**
     * Container's getter for WaitingTasksToDelegate_ROVO1.
     * @return WaitingTasksToDelegate_ROVO1
     */
    public ViewObjectImpl getWaitingTasksToDelegate_ROVO() {
        return (ViewObjectImpl)findViewObject("WaitingTasksToDelegate_ROVO");
    }

    /**
     * Container's getter for AllPersons_VO1.
     * @return AllPersons_VO1
     */
    public ViewObjectImpl getAllPersons_VO() {
        return (ViewObjectImpl)findViewObject("AllPersons_VO");
    }

    /**
     * Container's getter for DelegateTaskForm_ROVO1.
     * @return DelegateTaskForm_ROVO1
     */
    public ViewObjectImpl getDelegateTaskForm_ROVO() {
        return (ViewObjectImpl)findViewObject("DelegateTaskForm_ROVO");
    }

    /**
     * Container's getter for ExitClearanceForm_VO1.
     * @return ExitClearanceForm_VO1
     */
    public ViewObjectImpl getExitClearanceForm_VO() {
        return (ViewObjectImpl)findViewObject("ExitClearanceForm_VO");
    }

    /**
     * Container's getter for ApprovalHistoryVO2.
     * @return ApprovalHistoryVO2
     */
    public ViewObjectImpl getApprovalHistoryVO2() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryVO2");
    }

    /**
     * Container's getter for ExitForm_ApprovalHist_VL1.
     * @return ExitForm_ApprovalHist_VL1
     */
    public ViewLinkImpl getExitForm_ApprovalHist_VL1() {
        return (ViewLinkImpl)findViewLink("ExitForm_ApprovalHist_VL1");
    }

    /**
     * Container's getter for StatusCount_ExitClearance_ROVO1.
     * @return StatusCount_ExitClearance_ROVO1
     */
    public ViewObjectImpl getStatusCount_ExitClearance_ROVO1() {
        return (ViewObjectImpl)findViewObject("StatusCount_ExitClearance_ROVO1");
    }

    /**
     * Container's getter for ExitClearanceForm_VO1.
     * @return ExitClearanceForm_VO1
     */
    public ViewObjectImpl getExitClearanceForm_VORef() {
        return (ViewObjectImpl)findViewObject("ExitClearanceForm_VORef");
    }

    /**
     * Container's getter for CreateExitForm_ROVO1.
     * @return CreateExitForm_ROVO1
     */
    public ViewObjectImpl getCreateExitForm_ROVO1() {
        return (ViewObjectImpl)findViewObject("CreateExitForm_ROVO1");
    }

    /**
     * Container's getter for AllPersonsInHR_ROVO1.
     * @return AllPersonsInHR_ROVO1
     */
    public ViewObjectImpl getAllPersonsInHR_ROVO() {
        return (ViewObjectImpl)findViewObject("AllPersonsInHR_ROVO");
    }

    /**
     * Container's getter for AllAssigneesExitForm_ROVO1.
     * @return AllAssigneesExitForm_ROVO1
     */
    public ViewObjectImpl getAllAssigneesExitForm_ROVO1() {
        return (ViewObjectImpl)findViewObject("AllAssigneesExitForm_ROVO1");
    }

    /**
     * Container's getter for TraineesExitForm_VO1.
     * @return TraineesExitForm_VO1
     */
    public ViewObjectImpl getTraineesExitForm_VO() {
        return (ViewObjectImpl)findViewObject("TraineesExitForm_VO");
    }

    /**
     * Container's getter for TraineesExitForm_VO1.
     * @return TraineesExitForm_VO1
     */
    public ViewObjectImpl getTraineesExitForm_VORef() {
        return (ViewObjectImpl)findViewObject("TraineesExitForm_VORef");
    }

    /**
     * Container's getter for AssigneesTraineeExitForm_ROVO1.
     * @return AssigneesTraineeExitForm_ROVO1
     */
    public ViewObjectImpl getAssigneesTraineeExitForm_ROVO() {
        return (ViewObjectImpl)findViewObject("AssigneesTraineeExitForm_ROVO");
    }

    /**
     * Container's getter for ApprovalHistoryVO3.
     * @return ApprovalHistoryVO3
     */
    public ViewObjectImpl getApprovalHistoryVO3() {
        return (ViewObjectImpl)findViewObject("ApprovalHistoryVO3");
    }

    /**
     * Container's getter for TraineeExitApprovalHist_VL1.
     * @return TraineeExitApprovalHist_VL1
     */
    public ViewLinkImpl getTraineeExitApprovalHist_VL1() {
        return (ViewLinkImpl)findViewLink("TraineeExitApprovalHist_VL1");
    }

    /**
     * Container's getter for StatusCount_TraineesExit_ROVO1.
     * @return StatusCount_TraineesExit_ROVO1
     */
    public ViewObjectImpl getStatusCount_TraineesExit_ROVO() {
        return (ViewObjectImpl)findViewObject("StatusCount_TraineesExit_ROVO");
    }

    /**
     * Container's getter for UserLoginROVO1.
     * @return UserLoginROVO1
     */
    public ViewObjectImpl getUserLoginROVO1() {
        return (ViewObjectImpl)findViewObject("UserLoginROVO1");
    }

    /**
     * Container's getter for OvertimeROVO1.
     * @return OvertimeROVO1
     */
    public ViewObjectImpl getOvertimeROVO1() {
        return (ViewObjectImpl)findViewObject("OvertimeROVO1");
    }

    


    /**
     * Container's getter for LookUpValuesView1.
     * @return LookUpValuesView1
     */
    public LookUpValuesViewImpl getLookUpValuesView1() {
        return (LookUpValuesViewImpl)findViewObject("LookUpValuesView1");
    }

    /**
     * Container's getter for LookUpValuesROVO1.
     * @return LookUpValuesROVO1
     */
    public LookUpValuesROVOImpl getLookUpValuesROVO1() {
        return (LookUpValuesROVOImpl)findViewObject("LookUpValuesROVO1");
    }
    
    public void callSendInvoiceEmailStoredPL(String p_request_type, String p_request_number,BlobDomain p_attachment) {
            System.out.println("TEST MAIL " + p_request_type + " " + p_request_number);
            CallableStatement st = null;
            try {

                // 1. Create a JDBC CallabledStatement
                st =
     getDBTransaction().createCallableStatement("begin " + "send_invoice_request (?,?)" +
                                                ";end;", 0);
                // 4. Set the value of user-supplied bind vars in the stmt
                st.setString(1, p_request_type);
                st.setString(2, p_request_number);
               //st.setBlob(3, (Blob)p_attachment);
                //st.setCharacterStream(3,p_attachment.getCharacterStream());
              
                // 5. Set the value of user-supplied bind vars in the stmt
                st.executeUpdate();

            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        // 7. Close the statement
                        st.close();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        }

    /**
     * Container's getter for LocationTranslationROVO1.
     * @return LocationTranslationROVO1
     */
    public ViewObjectImpl getLocationTranslationROVO1() {
        return (ViewObjectImpl)findViewObject("LocationTranslationROVO1");
    }

    /**
     * Container's getter for RepaymentTicketsAttachmentsView1.
     * @return RepaymentTicketsAttachmentsView1
     */
    public ViewObjectImpl getRepaymentTicketsAttachmentsView1() {
        return (ViewObjectImpl)findViewObject("RepaymentTicketsAttachmentsView1");
    }

    /**
     * Container's getter for RepaymentTicketsAttachmentsFk1Link1.
     * @return RepaymentTicketsAttachmentsFk1Link1
     */
    public ViewLinkImpl getRepaymentTicketsAttachmentsFk1Link1() {
        return (ViewLinkImpl)findViewLink("RepaymentTicketsAttachmentsFk1Link1");
    }

    /**
     * Container's getter for ApprovalHistoryCeoVO1.
     * @return ApprovalHistoryCeoVO1
     */
    public ApprovalHistoryCeoVOImpl getApprovalHistoryCeoVO1() {
        return (ApprovalHistoryCeoVOImpl)findViewObject("ApprovalHistoryCeoVO1");
    }
    
    /**
     * CEO issue - Hierarchy Method added by Moshina on 2024.05.14
     * Issue Id #21361 
    **/
    public long getCEONextStepId(String requestName) {
        ViewObjectImpl stepIdCEOVO = getApprovalHistoryCeoVO1();
        System.out.println("CEO equestName is " + requestName);
        stepIdCEOVO.setNamedWhereClauseParam("req_name", requestName);
        stepIdCEOVO.executeQuery();
        Row first = stepIdCEOVO.first();
        long stepId = Long.parseLong(first.getAttribute("StepId").toString());
        System.out.println("Selected stepId is >>> " + stepId);
        return stepId;
    }

    /**
     * Container's getter for ElementAccountVO1.
     * @return ElementAccountVO1
     */
    public ViewObjectImpl getElementAccountVO1() {
        return (ViewObjectImpl)findViewObject("ElementAccountVO1");
    }
    /**
     * EES - new method implemented by Moshina
     * @param elementName
     * @return
     */
    public Row getElementAccount(String elementName) {
        System.out.println("elementName is " + elementName);
        ViewObjectImpl ElementAccview = getElementAccountVO1();
        ElementAccview.setNamedWhereClauseParam("bvElementName", elementName);
        ElementAccview.executeQuery();
        Row first = ElementAccview.first();
        return first;
    }
    
    /**
     * Call GET_DEPARTMENT procedure to get the cost center name
     * New method implemented by Moshina
     */
    
     public String callGetDepartment(String cost_center_number) {
       String result=null;
         try {
                 CallableStatement cs = this.getDBTransaction().createCallableStatement("{CALL GET_DEPARTMENT(?,?)}",1);
                         
                 cs.setString(1, cost_center_number);         
                 cs.registerOutParameter(2, Types.VARCHAR);
                 cs.execute();
                 result = cs.getString(2);
            }catch(Exception e) {
             e.printStackTrace();
         }
         return result;
     }
    
    /**
     * Call THC_HDR_UPDATE to insert data for auto element entry creation
     * EES - new method implemented by Moshina
     */
    
     public String callTatHdrUpdateProcess(String request_id, String person_no,String request_status, String doc_title,String doc_author,
                                                                                             String security_group, String element_name, String doc_account, String doc_type, String base_sixtyfour_file) {
       String result=null;
         try {
                 CallableStatement cs = this.getDBTransaction().createCallableStatement("{CALL INSERT_THC_EES_HDR_DETAILS(?,?,?,?,?,?,?,?,?,?,?)}",1);
                         
                 cs.setString(1, request_id);
                 cs.setString(2, person_no);  
                 cs.setString(3, request_status);
                 cs.setString(4, doc_title);
                 cs.setString(5, doc_author);
                 cs.setString(6, security_group);
                 cs.setString(7, element_name);
                 cs.setString(8, doc_account);
                 cs.setString(9, doc_type);
                 cs.setString(10, base_sixtyfour_file);
                         
                 cs.registerOutParameter(11, Types.VARCHAR);
                 cs.execute();
                 result = cs.getString(11);
            }catch(Exception e) {
             e.printStackTrace();
         }
         return result;
     }


    /**
     * Container's getter for ApproverStepsCEO_VO1.
     * @return ApproverStepsCEO_VO1
     */
    public RequestStepsCEO_VOImpl getApproverStepsCEO_VO1() {
        return (RequestStepsCEO_VOImpl) findViewObject("ApproverStepsCEO_VO1");
    }

    /**
     * Container's getter for NextRequestStepCEO.
     * @return NextRequestStepCEO
     */
    public RequestStepsCEOROViewImpl getNextRequestStepCEO() {
        return (RequestStepsCEOROViewImpl) findViewObject("NextRequestStepCEO");
    }
    
    public Row getNextStepCEO(oracle.jbo.domain.Number currentStep,
                           String requestName) {
        System.out.println("current CEO step is  " + currentStep);
        System.out.println("current CEO requestName is " + requestName);
        ViewObjectImpl nextRequestView = getNextRequestStepCEO();
        System.out.println("1. nextRequestView.getRowCount(): "+nextRequestView.getRowCount());
        nextRequestView.setNamedWhereClauseParam("bv_stepId", currentStep);
        nextRequestView.setNamedWhereClauseParam("bv_requestName", requestName);
        nextRequestView.executeQuery();
        System.out.println("nextRequestView.getRowCount(): "+nextRequestView.getRowCount());
        Row first = nextRequestView.first();
        return first; //(Number)first.getAttribute("NextStepId");
    }
}
