package com.sbm.selfServices.model.views.up;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 03 12:27:53 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BudgetValidationStepsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RequestTypeId {
            public Object get(BudgetValidationStepsVORowImpl obj) {
                return obj.getRequestTypeId();
            }

            public void put(BudgetValidationStepsVORowImpl obj, Object value) {
                obj.setRequestTypeId((Number)value);
            }
        },
        BudgetValidation {
            public Object get(BudgetValidationStepsVORowImpl obj) {
                return obj.getBudgetValidation();
            }

            public void put(BudgetValidationStepsVORowImpl obj, Object value) {
                obj.setBudgetValidation((String)value);
            }
        },
        StepId {
            public Object get(BudgetValidationStepsVORowImpl obj) {
                return obj.getStepId();
            }

            public void put(BudgetValidationStepsVORowImpl obj, Object value) {
                obj.setStepId((Number)value);
            }
        },
        StepName {
            public Object get(BudgetValidationStepsVORowImpl obj) {
                return obj.getStepName();
            }

            public void put(BudgetValidationStepsVORowImpl obj, Object value) {
                obj.setStepName((String)value);
            }
        },
        Trans_Budget_CheckBox {
            public Object get(BudgetValidationStepsVORowImpl obj) {
                return obj.getTrans_Budget_CheckBox();
            }

            public void put(BudgetValidationStepsVORowImpl obj, Object value) {
                obj.setTrans_Budget_CheckBox((Boolean)value);
            }
        },
        RequestTypesROVO {
            public Object get(BudgetValidationStepsVORowImpl obj) {
                return obj.getRequestTypesROVO();
            }

            public void put(BudgetValidationStepsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BudgetValidationStepsVORowImpl object);

        public abstract void put(BudgetValidationStepsVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int REQUESTTYPEID =
        AttributesEnum.RequestTypeId.index();
    public static final int BUDGETVALIDATION =
        AttributesEnum.BudgetValidation.index();
    public static final int STEPID = AttributesEnum.StepId.index();
    public static final int STEPNAME = AttributesEnum.StepName.index();
    public static final int TRANS_BUDGET_CHECKBOX =
        AttributesEnum.Trans_Budget_CheckBox.index();
    public static final int REQUESTTYPESROVO =
        AttributesEnum.RequestTypesROVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BudgetValidationStepsVORowImpl() {
    }

    /**
     * Gets BudgetValidationEO entity object.
     * @return the BudgetValidationEO
     */
    public EntityImpl getBudgetValidationEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for REQUEST_TYPE_ID using the alias name RequestTypeId.
     * @return the REQUEST_TYPE_ID
     */
    public Number getRequestTypeId() {
        return (Number)getAttributeInternal(REQUESTTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_TYPE_ID using the alias name RequestTypeId.
     * @param value value to set the REQUEST_TYPE_ID
     */
    public void setRequestTypeId(Number value) {
        setAttributeInternal(REQUESTTYPEID, value);
    }

    /**
     * Gets the attribute value for BUDGET_VALIDATION using the alias name BudgetValidation.
     * @return the BUDGET_VALIDATION
     */
    public String getBudgetValidation() {
        return (String)getAttributeInternal(BUDGETVALIDATION);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_VALIDATION using the alias name BudgetValidation.
     * @param value value to set the BUDGET_VALIDATION
     */
    public void setBudgetValidation(String value) {
        setAttributeInternal(BUDGETVALIDATION, value);

    }

    /**
     * Gets the attribute value for STEP_ID using the alias name StepId.
     * @return the STEP_ID
     */
    public Number getStepId() {
        return (Number)getAttributeInternal(STEPID);
    }

    /**
     * Sets <code>value</code> as attribute value for STEP_ID using the alias name StepId.
     * @param value value to set the STEP_ID
     */
    public void setStepId(Number value) {
        setAttributeInternal(STEPID, value);
    }

    /**
     * Gets the attribute value for STEP_NAME using the alias name StepName.
     * @return the STEP_NAME
     */
    public String getStepName() {
        return (String)getAttributeInternal(STEPNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for STEP_NAME using the alias name StepName.
     * @param value value to set the STEP_NAME
     */
    public void setStepName(String value) {
        setAttributeInternal(STEPNAME, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Trans_Budget_CheckBox.
     * @return the Trans_Budget_CheckBox
     */
    public Boolean getTrans_Budget_CheckBox() {
        Boolean flag = false;
        if (getBudgetValidation() != null &&
            getBudgetValidation().equals("Y")) {
            flag = true;
        } else {
            flag = false;
        }
        return flag;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_Budget_CheckBox.
     * @param value value to set the  Trans_Budget_CheckBox
     */
    public void setTrans_Budget_CheckBox(Boolean value) {
        if (value) {
            setBudgetValidation("Y");
        } else {
            setBudgetValidation("N");
        }

        setAttributeInternal(TRANS_BUDGET_CHECKBOX, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RequestTypesROVO.
     */
    public RowSet getRequestTypesROVO() {
        return (RowSet)getAttributeInternal(REQUESTTYPESROVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
