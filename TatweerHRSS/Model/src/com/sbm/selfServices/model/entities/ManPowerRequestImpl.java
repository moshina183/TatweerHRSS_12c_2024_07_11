package com.sbm.selfServices.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 06 12:44:30 AST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ManPowerRequestImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ManPowerReqId {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getManPowerReqId();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setManPowerReqId((DBSequence)value);
            }
        }
        ,
        CreationDate {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getCreationDate();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        RequisitionTitle {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getRequisitionTitle();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setRequisitionTitle((String)value);
            }
        }
        ,
        NumberOfOpening {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getNumberOfOpening();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setNumberOfOpening((Number)value);
            }
        }
        ,
        TargetStartDate {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getTargetStartDate();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setTargetStartDate((Date)value);
            }
        }
        ,
        Justifications {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getJustifications();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setJustifications((String)value);
            }
        }
        ,
        Department {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getDepartment();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setDepartment((String)value);
            }
        }
        ,
        Job {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getJob();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setJob((String)value);
            }
        }
        ,
        Grade {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getGrade();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setGrade((String)value);
            }
        }
        ,
        JobDescription {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getJobDescription();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setJobDescription((String)value);
            }
        }
        ,
        Qualifications {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getQualifications();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setQualifications((String)value);
            }
        }
        ,
        PositionCategory {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getPositionCategory();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setPositionCategory((String)value);
            }
        }
        ,
        Duration {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getDuration();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setDuration((Number)value);
            }
        }
        ,
        DurationType {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getDurationType();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setDurationType((String)value);
            }
        }
        ,
        Nationality {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getNationality();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setNationality((String)value);
            }
        }
        ,
        Language {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getLanguage();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setLanguage((String)value);
            }
        }
        ,
        OtherLanguage {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getOtherLanguage();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setOtherLanguage((String)value);
            }
        }
        ,
        Replacement {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getReplacement();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setReplacement((String)value);
            }
        }
        ,
        AdditionalComments {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getAdditionalComments();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setAdditionalComments((String)value);
            }
        }
        ,
        PersonNumber {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getPersonNumber();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setPersonNumber((String)value);
            }
        }
        ,
        PersonName {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getPersonName();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setPersonName((String)value);
            }
        }
        ,
        StepId {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getStepId();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setStepId((Long)value);
            }
        }
        ,
        Assignee {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getAssignee();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setAssignee((String)value);
            }
        }
        ,
        AssigneeName {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getAssigneeName();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setAssigneeName((String)value);
            }
        }
        ,
        PersonPosition {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getPersonPosition();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setPersonPosition((String)value);
            }
        }
        ,
        PersonJob {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getPersonJob();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setPersonJob((String)value);
            }
        }
        ,
        PersonDepartment {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getPersonDepartment();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setPersonDepartment((String)value);
            }
        }
        ,
        PersonLocation {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getPersonLocation();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setPersonLocation((String)value);
            }
        }
        ,
        PersonGrade {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getPersonGrade();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setPersonGrade((String)value);
            }
        }
        ,
        RequestStatus {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getRequestStatus();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setRequestStatus((String)value);
            }
        }
        ,
        RejectionReason {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getRejectionReason();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setRejectionReason((String)value);
            }
        }
        ,
        Years {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getYears();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setYears((Number)value);
            }
        }
        ,
        Months {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getMonths();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setMonths((Number)value);
            }
        }
        ,
        Days {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getDays();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setDays((Number)value);
            }
        }
        ,
        ActionTaken {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getActionTaken();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setActionTaken((String)value);
            }
        }
        ,
        BasicSalary {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getBasicSalary();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setBasicSalary((Number)value);
            }
        }
        ,
        Experience {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getExperience();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setExperience((String)value);
            }
        }
        ,
        Type {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getType();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ,
        WorkType {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getWorkType();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setWorkType((String)value);
            }
        }
        ,
        AvailableBudgect {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getAvailableBudgect();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setAvailableBudgect((String)value);
            }
        }
        ,
        EditRequest {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getEditRequest();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setEditRequest((String)value);
            }
        }
        ,
        ManpowerAttachmentsEO {
            public Object get(ManPowerRequestImpl obj) {
                return obj.getManpowerAttachmentsEO();
            }

            public void put(ManPowerRequestImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ManPowerRequestImpl object);

        public abstract void put(ManPowerRequestImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int MANPOWERREQID = AttributesEnum.ManPowerReqId.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int REQUISITIONTITLE = AttributesEnum.RequisitionTitle.index();
    public static final int NUMBEROFOPENING = AttributesEnum.NumberOfOpening.index();
    public static final int TARGETSTARTDATE = AttributesEnum.TargetStartDate.index();
    public static final int JUSTIFICATIONS = AttributesEnum.Justifications.index();
    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int JOB = AttributesEnum.Job.index();
    public static final int GRADE = AttributesEnum.Grade.index();
    public static final int JOBDESCRIPTION = AttributesEnum.JobDescription.index();
    public static final int QUALIFICATIONS = AttributesEnum.Qualifications.index();
    public static final int POSITIONCATEGORY = AttributesEnum.PositionCategory.index();
    public static final int DURATION = AttributesEnum.Duration.index();
    public static final int DURATIONTYPE = AttributesEnum.DurationType.index();
    public static final int NATIONALITY = AttributesEnum.Nationality.index();
    public static final int LANGUAGE = AttributesEnum.Language.index();
    public static final int OTHERLANGUAGE = AttributesEnum.OtherLanguage.index();
    public static final int REPLACEMENT = AttributesEnum.Replacement.index();
    public static final int ADDITIONALCOMMENTS = AttributesEnum.AdditionalComments.index();
    public static final int PERSONNUMBER = AttributesEnum.PersonNumber.index();
    public static final int PERSONNAME = AttributesEnum.PersonName.index();
    public static final int STEPID = AttributesEnum.StepId.index();
    public static final int ASSIGNEE = AttributesEnum.Assignee.index();
    public static final int ASSIGNEENAME = AttributesEnum.AssigneeName.index();
    public static final int PERSONPOSITION = AttributesEnum.PersonPosition.index();
    public static final int PERSONJOB = AttributesEnum.PersonJob.index();
    public static final int PERSONDEPARTMENT = AttributesEnum.PersonDepartment.index();
    public static final int PERSONLOCATION = AttributesEnum.PersonLocation.index();
    public static final int PERSONGRADE = AttributesEnum.PersonGrade.index();
    public static final int REQUESTSTATUS = AttributesEnum.RequestStatus.index();
    public static final int REJECTIONREASON = AttributesEnum.RejectionReason.index();
    public static final int YEARS = AttributesEnum.Years.index();
    public static final int MONTHS = AttributesEnum.Months.index();
    public static final int DAYS = AttributesEnum.Days.index();
    public static final int ACTIONTAKEN = AttributesEnum.ActionTaken.index();
    public static final int BASICSALARY = AttributesEnum.BasicSalary.index();
    public static final int EXPERIENCE = AttributesEnum.Experience.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int WORKTYPE = AttributesEnum.WorkType.index();
    public static final int AVAILABLEBUDGECT = AttributesEnum.AvailableBudgect.index();
    public static final int EDITREQUEST = AttributesEnum.EditRequest.index();
    public static final int MANPOWERATTACHMENTSEO = AttributesEnum.ManpowerAttachmentsEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ManPowerRequestImpl() {
    }

    /**
     * Gets the attribute value for ManPowerReqId, using the alias name ManPowerReqId.
     * @return the ManPowerReqId
     */
    public DBSequence getManPowerReqId() {
        return (DBSequence)getAttributeInternal(MANPOWERREQID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManPowerReqId.
     * @param value value to set the ManPowerReqId
     */
    public void setManPowerReqId(DBSequence value) {
        setAttributeInternal(MANPOWERREQID, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for RequisitionTitle, using the alias name RequisitionTitle.
     * @return the RequisitionTitle
     */
    public String getRequisitionTitle() {
        return (String)getAttributeInternal(REQUISITIONTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequisitionTitle.
     * @param value value to set the RequisitionTitle
     */
    public void setRequisitionTitle(String value) {
        setAttributeInternal(REQUISITIONTITLE, value);
    }

    /**
     * Gets the attribute value for NumberOfOpening, using the alias name NumberOfOpening.
     * @return the NumberOfOpening
     */
    public Number getNumberOfOpening() {
        return (Number)getAttributeInternal(NUMBEROFOPENING);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfOpening.
     * @param value value to set the NumberOfOpening
     */
    public void setNumberOfOpening(Number value) {
        setAttributeInternal(NUMBEROFOPENING, value);
    }

    /**
     * Gets the attribute value for TargetStartDate, using the alias name TargetStartDate.
     * @return the TargetStartDate
     */
    public Date getTargetStartDate() {
        return (Date)getAttributeInternal(TARGETSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetStartDate.
     * @param value value to set the TargetStartDate
     */
    public void setTargetStartDate(Date value) {
        setAttributeInternal(TARGETSTARTDATE, value);
    }

    /**
     * Gets the attribute value for Justifications, using the alias name Justifications.
     * @return the Justifications
     */
    public String getJustifications() {
        return (String)getAttributeInternal(JUSTIFICATIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Justifications.
     * @param value value to set the Justifications
     */
    public void setJustifications(String value) {
        setAttributeInternal(JUSTIFICATIONS, value);
    }

    /**
     * Gets the attribute value for Department, using the alias name Department.
     * @return the Department
     */
    public String getDepartment() {
        return (String)getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Department.
     * @param value value to set the Department
     */
    public void setDepartment(String value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**
     * Gets the attribute value for Job, using the alias name Job.
     * @return the Job
     */
    public String getJob() {
        return (String)getAttributeInternal(JOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for Job.
     * @param value value to set the Job
     */
    public void setJob(String value) {
        setAttributeInternal(JOB, value);
    }

    /**
     * Gets the attribute value for Grade, using the alias name Grade.
     * @return the Grade
     */
    public String getGrade() {
        return (String)getAttributeInternal(GRADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Grade.
     * @param value value to set the Grade
     */
    public void setGrade(String value) {
        setAttributeInternal(GRADE, value);
    }

    /**
     * Gets the attribute value for JobDescription, using the alias name JobDescription.
     * @return the JobDescription
     */
    public String getJobDescription() {
        return (String)getAttributeInternal(JOBDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobDescription.
     * @param value value to set the JobDescription
     */
    public void setJobDescription(String value) {
        setAttributeInternal(JOBDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for Qualifications, using the alias name Qualifications.
     * @return the Qualifications
     */
    public String getQualifications() {
        return (String)getAttributeInternal(QUALIFICATIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Qualifications.
     * @param value value to set the Qualifications
     */
    public void setQualifications(String value) {
        setAttributeInternal(QUALIFICATIONS, value);
    }

    /**
     * Gets the attribute value for PositionCategory, using the alias name PositionCategory.
     * @return the PositionCategory
     */
    public String getPositionCategory() {
        return (String)getAttributeInternal(POSITIONCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PositionCategory.
     * @param value value to set the PositionCategory
     */
    public void setPositionCategory(String value) {
        setAttributeInternal(POSITIONCATEGORY, value);
    }

    /**
     * Gets the attribute value for Duration, using the alias name Duration.
     * @return the Duration
     */
    public Number getDuration() {
        return (Number)getAttributeInternal(DURATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Duration.
     * @param value value to set the Duration
     */
    public void setDuration(Number value) {
        setAttributeInternal(DURATION, value);
    }

    /**
     * Gets the attribute value for DurationType, using the alias name DurationType.
     * @return the DurationType
     */
    public String getDurationType() {
        return (String)getAttributeInternal(DURATIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DurationType.
     * @param value value to set the DurationType
     */
    public void setDurationType(String value) {
        setAttributeInternal(DURATIONTYPE, value);
    }

    /**
     * Gets the attribute value for Nationality, using the alias name Nationality.
     * @return the Nationality
     */
    public String getNationality() {
        return (String)getAttributeInternal(NATIONALITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nationality.
     * @param value value to set the Nationality
     */
    public void setNationality(String value) {
        setAttributeInternal(NATIONALITY, value);
    }

    /**
     * Gets the attribute value for Language, using the alias name Language.
     * @return the Language
     */
    public String getLanguage() {
        return (String)getAttributeInternal(LANGUAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Language.
     * @param value value to set the Language
     */
    public void setLanguage(String value) {
        setAttributeInternal(LANGUAGE, value);
    }

    /**
     * Gets the attribute value for OtherLanguage, using the alias name OtherLanguage.
     * @return the OtherLanguage
     */
    public String getOtherLanguage() {
        return (String)getAttributeInternal(OTHERLANGUAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OtherLanguage.
     * @param value value to set the OtherLanguage
     */
    public void setOtherLanguage(String value) {
        setAttributeInternal(OTHERLANGUAGE, value);
    }

    /**
     * Gets the attribute value for Replacement, using the alias name Replacement.
     * @return the Replacement
     */
    public String getReplacement() {
        return (String)getAttributeInternal(REPLACEMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Replacement.
     * @param value value to set the Replacement
     */
    public void setReplacement(String value) {
        setAttributeInternal(REPLACEMENT, value);
    }

    /**
     * Gets the attribute value for AdditionalComments, using the alias name AdditionalComments.
     * @return the AdditionalComments
     */
    public String getAdditionalComments() {
        return (String)getAttributeInternal(ADDITIONALCOMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AdditionalComments.
     * @param value value to set the AdditionalComments
     */
    public void setAdditionalComments(String value) {
        setAttributeInternal(ADDITIONALCOMMENTS, value);
    }

    /**
     * Gets the attribute value for PersonNumber, using the alias name PersonNumber.
     * @return the PersonNumber
     */
    public String getPersonNumber() {
        return (String)getAttributeInternal(PERSONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonNumber.
     * @param value value to set the PersonNumber
     */
    public void setPersonNumber(String value) {
        setAttributeInternal(PERSONNUMBER, value);
    }

    /**
     * Gets the attribute value for PersonName, using the alias name PersonName.
     * @return the PersonName
     */
    public String getPersonName() {
        return (String)getAttributeInternal(PERSONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonName.
     * @param value value to set the PersonName
     */
    public void setPersonName(String value) {
        setAttributeInternal(PERSONNAME, value);
    }

    /**
     * Gets the attribute value for StepId, using the alias name StepId.
     * @return the StepId
     */
    public Long getStepId() {
        return (Long)getAttributeInternal(STEPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StepId.
     * @param value value to set the StepId
     */
    public void setStepId(Long value) {
        setAttributeInternal(STEPID, value);
    }

    /**
     * Gets the attribute value for Assignee, using the alias name Assignee.
     * @return the Assignee
     */
    public String getAssignee() {
        return (String)getAttributeInternal(ASSIGNEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assignee.
     * @param value value to set the Assignee
     */
    public void setAssignee(String value) {
        setAttributeInternal(ASSIGNEE, value);
    }

    /**
     * Gets the attribute value for AssigneeName, using the alias name AssigneeName.
     * @return the AssigneeName
     */
    public String getAssigneeName() {
        return (String)getAttributeInternal(ASSIGNEENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssigneeName.
     * @param value value to set the AssigneeName
     */
    public void setAssigneeName(String value) {
        setAttributeInternal(ASSIGNEENAME, value);
    }

    /**
     * Gets the attribute value for PersonPosition, using the alias name PersonPosition.
     * @return the PersonPosition
     */
    public String getPersonPosition() {
        return (String)getAttributeInternal(PERSONPOSITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonPosition.
     * @param value value to set the PersonPosition
     */
    public void setPersonPosition(String value) {
        setAttributeInternal(PERSONPOSITION, value);
    }

    /**
     * Gets the attribute value for PersonJob, using the alias name PersonJob.
     * @return the PersonJob
     */
    public String getPersonJob() {
        return (String)getAttributeInternal(PERSONJOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonJob.
     * @param value value to set the PersonJob
     */
    public void setPersonJob(String value) {
        setAttributeInternal(PERSONJOB, value);
    }

    /**
     * Gets the attribute value for PersonDepartment, using the alias name PersonDepartment.
     * @return the PersonDepartment
     */
    public String getPersonDepartment() {
        return (String)getAttributeInternal(PERSONDEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonDepartment.
     * @param value value to set the PersonDepartment
     */
    public void setPersonDepartment(String value) {
        setAttributeInternal(PERSONDEPARTMENT, value);
    }

    /**
     * Gets the attribute value for PersonLocation, using the alias name PersonLocation.
     * @return the PersonLocation
     */
    public String getPersonLocation() {
        return (String)getAttributeInternal(PERSONLOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonLocation.
     * @param value value to set the PersonLocation
     */
    public void setPersonLocation(String value) {
        setAttributeInternal(PERSONLOCATION, value);
    }

    /**
     * Gets the attribute value for PersonGrade, using the alias name PersonGrade.
     * @return the PersonGrade
     */
    public String getPersonGrade() {
        return (String)getAttributeInternal(PERSONGRADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonGrade.
     * @param value value to set the PersonGrade
     */
    public void setPersonGrade(String value) {
        setAttributeInternal(PERSONGRADE, value);
    }

    /**
     * Gets the attribute value for RequestStatus, using the alias name RequestStatus.
     * @return the RequestStatus
     */
    public String getRequestStatus() {
        return (String)getAttributeInternal(REQUESTSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestStatus.
     * @param value value to set the RequestStatus
     */
    public void setRequestStatus(String value) {
        setAttributeInternal(REQUESTSTATUS, value);
    }

    /**
     * Gets the attribute value for RejectionReason, using the alias name RejectionReason.
     * @return the RejectionReason
     */
    public String getRejectionReason() {
        return (String)getAttributeInternal(REJECTIONREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejectionReason.
     * @param value value to set the RejectionReason
     */
    public void setRejectionReason(String value) {
        setAttributeInternal(REJECTIONREASON, value);
    }

    /**
     * Gets the attribute value for Years, using the alias name Years.
     * @return the Years
     */
    public Number getYears() {
        return (Number)getAttributeInternal(YEARS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Years.
     * @param value value to set the Years
     */
    public void setYears(Number value) {
        setAttributeInternal(YEARS, value);
    }

    /**
     * Gets the attribute value for Months, using the alias name Months.
     * @return the Months
     */
    public Number getMonths() {
        return (Number)getAttributeInternal(MONTHS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Months.
     * @param value value to set the Months
     */
    public void setMonths(Number value) {
        setAttributeInternal(MONTHS, value);
    }

    /**
     * Gets the attribute value for Days, using the alias name Days.
     * @return the Days
     */
    public Number getDays() {
        return (Number)getAttributeInternal(DAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Days.
     * @param value value to set the Days
     */
    public void setDays(Number value) {
        setAttributeInternal(DAYS, value);
    }

    /**
     * Gets the attribute value for ActionTaken, using the alias name ActionTaken.
     * @return the ActionTaken
     */
    public String getActionTaken() {
        return (String)getAttributeInternal(ACTIONTAKEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionTaken.
     * @param value value to set the ActionTaken
     */
    public void setActionTaken(String value) {
        setAttributeInternal(ACTIONTAKEN, value);
    }

    /**
     * Gets the attribute value for BasicSalary, using the alias name BasicSalary.
     * @return the BasicSalary
     */
    public Number getBasicSalary() {
        return (Number)getAttributeInternal(BASICSALARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BasicSalary.
     * @param value value to set the BasicSalary
     */
    public void setBasicSalary(Number value) {
        setAttributeInternal(BASICSALARY, value);
    }

    /**
     * Gets the attribute value for Experience, using the alias name Experience.
     * @return the Experience
     */
    public String getExperience() {
        return (String)getAttributeInternal(EXPERIENCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Experience.
     * @param value value to set the Experience
     */
    public void setExperience(String value) {
        setAttributeInternal(EXPERIENCE, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the Type
     */
    public String getType() {
        return (String)getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for WorkType, using the alias name WorkType.
     * @return the WorkType
     */
    public String getWorkType() {
        return (String)getAttributeInternal(WORKTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkType.
     * @param value value to set the WorkType
     */
    public void setWorkType(String value) {
        setAttributeInternal(WORKTYPE, value);
    }

    /**
     * Gets the attribute value for AvailableBudgect, using the alias name AvailableBudgect.
     * @return the AvailableBudgect
     */
    public String getAvailableBudgect() {
        return (String)getAttributeInternal(AVAILABLEBUDGECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AvailableBudgect.
     * @param value value to set the AvailableBudgect
     */
    public void setAvailableBudgect(String value) {
        setAttributeInternal(AVAILABLEBUDGECT, value);
    }

    /**
     * Gets the attribute value for EditRequest, using the alias name EditRequest.
     * @return the EditRequest
     */
    public String getEditRequest() {
        return (String)getAttributeInternal(EDITREQUEST);
    }

    /**
     * Sets <code>value</code> as the attribute value for EditRequest.
     * @param value value to set the EditRequest
     */
    public void setEditRequest(String value) {
        setAttributeInternal(EDITREQUEST, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getManpowerAttachmentsEO() {
        return (RowIterator)getAttributeInternal(MANPOWERATTACHMENTSEO);
    }

    /**
     * @param manPowerReqId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence manPowerReqId) {
        return new Key(new Object[]{manPowerReqId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sbm.selfServices.model.entities.ManPowerRequest");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        getDBTransaction().commit();
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
