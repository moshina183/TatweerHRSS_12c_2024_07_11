package com.sbm.selfServices.model.views.up;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 28 23:22:11 EEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DepartmentsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DeptId {
            public Object get(DepartmentsVORowImpl obj) {
                return obj.getDeptId();
            }

            public void put(DepartmentsVORowImpl obj, Object value) {
                obj.setDeptId((Number)value);
            }
        }
        ,
        DeptName {
            public Object get(DepartmentsVORowImpl obj) {
                return obj.getDeptName();
            }

            public void put(DepartmentsVORowImpl obj, Object value) {
                obj.setDeptName((String)value);
            }
        }
        ,
        Segment4 {
            public Object get(DepartmentsVORowImpl obj) {
                return obj.getSegment4();
            }

            public void put(DepartmentsVORowImpl obj, Object value) {
                obj.setSegment4((String)value);
            }
        }
        ,
        Segment2 {
            public Object get(DepartmentsVORowImpl obj) {
                return obj.getSegment2();
            }

            public void put(DepartmentsVORowImpl obj, Object value) {
                obj.setSegment2((String)value);
            }
        }
        ,
        Segment3 {
            public Object get(DepartmentsVORowImpl obj) {
                return obj.getSegment3();
            }

            public void put(DepartmentsVORowImpl obj, Object value) {
                obj.setSegment3((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(DepartmentsVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(DepartmentsVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DepartmentsVORowImpl object);

        public abstract void put(DepartmentsVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DEPTID = AttributesEnum.DeptId.index();
    public static final int DEPTNAME = AttributesEnum.DeptName.index();
    public static final int SEGMENT4 = AttributesEnum.Segment4.index();
    public static final int SEGMENT2 = AttributesEnum.Segment2.index();
    public static final int SEGMENT3 = AttributesEnum.Segment3.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DepartmentsVORowImpl() {
    }

    /**
     * Gets DepartmentsEO entity object.
     * @return the DepartmentsEO
     */
    public EntityImpl getDepartmentsEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for DEPT_ID using the alias name DeptId.
     * @return the DEPT_ID
     */
    public Number getDeptId() {
        return (Number) getAttributeInternal(DEPTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPT_ID using the alias name DeptId.
     * @param value value to set the DEPT_ID
     */
    public void setDeptId(Number value) {
        setAttributeInternal(DEPTID, value);
    }

    /**
     * Gets the attribute value for DEPT_NAME using the alias name DeptName.
     * @return the DEPT_NAME
     */
    public String getDeptName() {
        return (String) getAttributeInternal(DEPTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPT_NAME using the alias name DeptName.
     * @param value value to set the DEPT_NAME
     */
    public void setDeptName(String value) {
        setAttributeInternal(DEPTNAME, value);
    }

    /**
     * Gets the attribute value for SEGMENT4 using the alias name Segment4.
     * @return the SEGMENT4
     */
    public String getSegment4() {
        return (String) getAttributeInternal(SEGMENT4);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT4 using the alias name Segment4.
     * @param value value to set the SEGMENT4
     */
    public void setSegment4(String value) {
        setAttributeInternal(SEGMENT4, value);
    }

    /**
     * Gets the attribute value for SEGMENT2 using the alias name Segment2.
     * @return the SEGMENT2
     */
    public String getSegment2() {
        return (String) getAttributeInternal(SEGMENT2);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT2 using the alias name Segment2.
     * @param value value to set the SEGMENT2
     */
    public void setSegment2(String value) {
        setAttributeInternal(SEGMENT2, value);
    }

    /**
     * Gets the attribute value for SEGMENT3 using the alias name Segment3.
     * @return the SEGMENT3
     */
    public String getSegment3() {
        return (String) getAttributeInternal(SEGMENT3);
    }

    /**
     * Sets <code>value</code> as attribute value for SEGMENT3 using the alias name Segment3.
     * @param value value to set the SEGMENT3
     */
    public void setSegment3(String value) {
        setAttributeInternal(SEGMENT3, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
