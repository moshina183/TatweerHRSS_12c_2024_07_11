package com.sbm.selfServices.model.entities;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jul 04 18:44:11 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LoanSettlement_EOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        LoanPreclosureId {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLoanPreclosureId();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLoanPreclosureId((DBSequence)value);
            }
        }
        ,
        LoanId {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLoanId();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLoanId((Number)value);
            }
        }
        ,
        LoanCreationDate {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLoanCreationDate();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLoanCreationDate((Date)value);
            }
        }
        ,
        LoanTotalAmount {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLoanTotalAmount();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLoanTotalAmount((Number)value);
            }
        }
        ,
        LoanRemainingAmount {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLoanRemainingAmount();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLoanRemainingAmount((Number)value);
            }
        }
        ,
        LoanNoOfMonths {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLoanNoOfMonths();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLoanNoOfMonths((Number)value);
            }
        }
        ,
        LoanDivision {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLoanDivision();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLoanDivision((Number)value);
            }
        }
        ,
        PersonJob {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getPersonJob();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setPersonJob((String)value);
            }
        }
        ,
        PersonPosition {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getPersonPosition();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setPersonPosition((String)value);
            }
        }
        ,
        PersonLocation {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getPersonLocation();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setPersonLocation((String)value);
            }
        }
        ,
        PersonDepartment {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getPersonDepartment();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setPersonDepartment((String)value);
            }
        }
        ,
        PersonGrade {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getPersonGrade();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setPersonGrade((String)value);
            }
        }
        ,
        PersonName {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getPersonName();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setPersonName((String)value);
            }
        }
        ,
        PersonNumber {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getPersonNumber();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setPersonNumber((String)value);
            }
        }
        ,
        StepId {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getStepId();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setStepId((Long)value);
            }
        }
        ,
        Assignee {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getAssignee();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setAssignee((String)value);
            }
        }
        ,
        AssigneeName {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getAssigneeName();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setAssigneeName((String)value);
            }
        }
        ,
        RequestStatus {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getRequestStatus();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setRequestStatus((String)value);
            }
        }
        ,
        ActionTaken {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getActionTaken();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setActionTaken((String)value);
            }
        }
        ,
        RejectComment {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getRejectComment();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setRejectComment((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        CreatedOn {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getCreatedOn();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setCreatedOn((Date)value);
            }
        }
        ,
        LastUpdatedOn {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getLastUpdatedOn();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setLastUpdatedOn((Date)value);
            }
        }
        ,
        RowID {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getRowID();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AttachmentFile {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getAttachmentFile();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setAttachmentFile((BlobDomain)value);
            }
        }
        ,
        FileName {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getFileName();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setFileName((String)value);
            }
        }
        ,
        FileType {
            public Object get(LoanSettlement_EOImpl obj) {
                return obj.getFileType();
            }

            public void put(LoanSettlement_EOImpl obj, Object value) {
                obj.setFileType((String)value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(LoanSettlement_EOImpl object);

        public abstract void put(LoanSettlement_EOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LOANPRECLOSUREID = AttributesEnum.LoanPreclosureId.index();
    public static final int LOANID = AttributesEnum.LoanId.index();
    public static final int LOANCREATIONDATE = AttributesEnum.LoanCreationDate.index();
    public static final int LOANTOTALAMOUNT = AttributesEnum.LoanTotalAmount.index();
    public static final int LOANREMAININGAMOUNT = AttributesEnum.LoanRemainingAmount.index();
    public static final int LOANNOOFMONTHS = AttributesEnum.LoanNoOfMonths.index();
    public static final int LOANDIVISION = AttributesEnum.LoanDivision.index();
    public static final int PERSONJOB = AttributesEnum.PersonJob.index();
    public static final int PERSONPOSITION = AttributesEnum.PersonPosition.index();
    public static final int PERSONLOCATION = AttributesEnum.PersonLocation.index();
    public static final int PERSONDEPARTMENT = AttributesEnum.PersonDepartment.index();
    public static final int PERSONGRADE = AttributesEnum.PersonGrade.index();
    public static final int PERSONNAME = AttributesEnum.PersonName.index();
    public static final int PERSONNUMBER = AttributesEnum.PersonNumber.index();
    public static final int STEPID = AttributesEnum.StepId.index();
    public static final int ASSIGNEE = AttributesEnum.Assignee.index();
    public static final int ASSIGNEENAME = AttributesEnum.AssigneeName.index();
    public static final int REQUESTSTATUS = AttributesEnum.RequestStatus.index();
    public static final int ACTIONTAKEN = AttributesEnum.ActionTaken.index();
    public static final int REJECTCOMMENT = AttributesEnum.RejectComment.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATEDON = AttributesEnum.CreatedOn.index();
    public static final int LASTUPDATEDON = AttributesEnum.LastUpdatedOn.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int ATTACHMENTFILE = AttributesEnum.AttachmentFile.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILETYPE = AttributesEnum.FileType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LoanSettlement_EOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sbm.selfServices.model.entities.LoanSettlement_EO");
    }

    /**
     * Gets the attribute value for LoanPreclosureId, using the alias name LoanPreclosureId.
     * @return the LoanPreclosureId
     */
    public DBSequence getLoanPreclosureId() {
        return (DBSequence)getAttributeInternal(LOANPRECLOSUREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanPreclosureId.
     * @param value value to set the LoanPreclosureId
     */
    public void setLoanPreclosureId(DBSequence value) {
        setAttributeInternal(LOANPRECLOSUREID, value);
    }

    /**
     * Gets the attribute value for LoanId, using the alias name LoanId.
     * @return the LoanId
     */
    public Number getLoanId() {
        return (Number)getAttributeInternal(LOANID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanId.
     * @param value value to set the LoanId
     */
    public void setLoanId(Number value) {
        setAttributeInternal(LOANID, value);
    }

    /**
     * Gets the attribute value for LoanCreationDate, using the alias name LoanCreationDate.
     * @return the LoanCreationDate
     */
    public Date getLoanCreationDate() {
        return (Date)getAttributeInternal(LOANCREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanCreationDate.
     * @param value value to set the LoanCreationDate
     */
    public void setLoanCreationDate(Date value) {
        setAttributeInternal(LOANCREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LoanTotalAmount, using the alias name LoanTotalAmount.
     * @return the LoanTotalAmount
     */
    public Number getLoanTotalAmount() {
        return (Number)getAttributeInternal(LOANTOTALAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanTotalAmount.
     * @param value value to set the LoanTotalAmount
     */
    public void setLoanTotalAmount(Number value) {
        setAttributeInternal(LOANTOTALAMOUNT, value);
    }

    /**
     * Gets the attribute value for LoanRemainingAmount, using the alias name LoanRemainingAmount.
     * @return the LoanRemainingAmount
     */
    public Number getLoanRemainingAmount() {
        return (Number)getAttributeInternal(LOANREMAININGAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanRemainingAmount.
     * @param value value to set the LoanRemainingAmount
     */
    public void setLoanRemainingAmount(Number value) {
        setAttributeInternal(LOANREMAININGAMOUNT, value);
    }

    /**
     * Gets the attribute value for LoanNoOfMonths, using the alias name LoanNoOfMonths.
     * @return the LoanNoOfMonths
     */
    public Number getLoanNoOfMonths() {
        return (Number)getAttributeInternal(LOANNOOFMONTHS);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanNoOfMonths.
     * @param value value to set the LoanNoOfMonths
     */
    public void setLoanNoOfMonths(Number value) {
        setAttributeInternal(LOANNOOFMONTHS, value);
    }

    /**
     * Gets the attribute value for LoanDivision, using the alias name LoanDivision.
     * @return the LoanDivision
     */
    public Number getLoanDivision() {
        return (Number)getAttributeInternal(LOANDIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanDivision.
     * @param value value to set the LoanDivision
     */
    public void setLoanDivision(Number value) {
        setAttributeInternal(LOANDIVISION, value);
    }

    /**
     * Gets the attribute value for PersonJob, using the alias name PersonJob.
     * @return the PersonJob
     */
    public String getPersonJob() {
        return (String)getAttributeInternal(PERSONJOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonJob.
     * @param value value to set the PersonJob
     */
    public void setPersonJob(String value) {
        setAttributeInternal(PERSONJOB, value);
    }

    /**
     * Gets the attribute value for PersonPosition, using the alias name PersonPosition.
     * @return the PersonPosition
     */
    public String getPersonPosition() {
        return (String)getAttributeInternal(PERSONPOSITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonPosition.
     * @param value value to set the PersonPosition
     */
    public void setPersonPosition(String value) {
        setAttributeInternal(PERSONPOSITION, value);
    }

    /**
     * Gets the attribute value for PersonLocation, using the alias name PersonLocation.
     * @return the PersonLocation
     */
    public String getPersonLocation() {
        return (String)getAttributeInternal(PERSONLOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonLocation.
     * @param value value to set the PersonLocation
     */
    public void setPersonLocation(String value) {
        setAttributeInternal(PERSONLOCATION, value);
    }

    /**
     * Gets the attribute value for PersonDepartment, using the alias name PersonDepartment.
     * @return the PersonDepartment
     */
    public String getPersonDepartment() {
        return (String)getAttributeInternal(PERSONDEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonDepartment.
     * @param value value to set the PersonDepartment
     */
    public void setPersonDepartment(String value) {
        setAttributeInternal(PERSONDEPARTMENT, value);
    }

    /**
     * Gets the attribute value for PersonGrade, using the alias name PersonGrade.
     * @return the PersonGrade
     */
    public String getPersonGrade() {
        return (String)getAttributeInternal(PERSONGRADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonGrade.
     * @param value value to set the PersonGrade
     */
    public void setPersonGrade(String value) {
        setAttributeInternal(PERSONGRADE, value);
    }

    /**
     * Gets the attribute value for PersonName, using the alias name PersonName.
     * @return the PersonName
     */
    public String getPersonName() {
        return (String)getAttributeInternal(PERSONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonName.
     * @param value value to set the PersonName
     */
    public void setPersonName(String value) {
        setAttributeInternal(PERSONNAME, value);
    }

    /**
     * Gets the attribute value for PersonNumber, using the alias name PersonNumber.
     * @return the PersonNumber
     */
    public String getPersonNumber() {
        return (String)getAttributeInternal(PERSONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonNumber.
     * @param value value to set the PersonNumber
     */
    public void setPersonNumber(String value) {
        setAttributeInternal(PERSONNUMBER, value);
    }

    /**
     * Gets the attribute value for StepId, using the alias name StepId.
     * @return the StepId
     */
    public Long getStepId() {
        return (Long)getAttributeInternal(STEPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StepId.
     * @param value value to set the StepId
     */
    public void setStepId(Long value) {
        setAttributeInternal(STEPID, value);
    }

    /**
     * Gets the attribute value for Assignee, using the alias name Assignee.
     * @return the Assignee
     */
    public String getAssignee() {
        return (String)getAttributeInternal(ASSIGNEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assignee.
     * @param value value to set the Assignee
     */
    public void setAssignee(String value) {
        setAttributeInternal(ASSIGNEE, value);
    }

    /**
     * Gets the attribute value for AssigneeName, using the alias name AssigneeName.
     * @return the AssigneeName
     */
    public String getAssigneeName() {
        return (String)getAttributeInternal(ASSIGNEENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssigneeName.
     * @param value value to set the AssigneeName
     */
    public void setAssigneeName(String value) {
        setAttributeInternal(ASSIGNEENAME, value);
    }

    /**
     * Gets the attribute value for RequestStatus, using the alias name RequestStatus.
     * @return the RequestStatus
     */
    public String getRequestStatus() {
        return (String)getAttributeInternal(REQUESTSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestStatus.
     * @param value value to set the RequestStatus
     */
    public void setRequestStatus(String value) {
        setAttributeInternal(REQUESTSTATUS, value);
    }

    /**
     * Gets the attribute value for ActionTaken, using the alias name ActionTaken.
     * @return the ActionTaken
     */
    public String getActionTaken() {
        return (String)getAttributeInternal(ACTIONTAKEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionTaken.
     * @param value value to set the ActionTaken
     */
    public void setActionTaken(String value) {
        setAttributeInternal(ACTIONTAKEN, value);
    }

    /**
     * Gets the attribute value for RejectComment, using the alias name RejectComment.
     * @return the RejectComment
     */
    public String getRejectComment() {
        return (String)getAttributeInternal(REJECTCOMMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejectComment.
     * @param value value to set the RejectComment
     */
    public void setRejectComment(String value) {
        setAttributeInternal(REJECTCOMMENT, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedOn, using the alias name CreatedOn.
     * @return the CreatedOn
     */
    public Date getCreatedOn() {
        return (Date)getAttributeInternal(CREATEDON);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedOn.
     * @param value value to set the CreatedOn
     */
    public void setCreatedOn(Date value) {
        setAttributeInternal(CREATEDON, value);
    }

    /**
     * Gets the attribute value for LastUpdatedOn, using the alias name LastUpdatedOn.
     * @return the LastUpdatedOn
     */
    public Date getLastUpdatedOn() {
        return (Date)getAttributeInternal(LASTUPDATEDON);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedOn.
     * @param value value to set the LastUpdatedOn
     */
    public void setLastUpdatedOn(Date value) {
        setAttributeInternal(LASTUPDATEDON, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the RowID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**
     * Gets the attribute value for AttachmentFile, using the alias name AttachmentFile.
     * @return the AttachmentFile
     */
    public BlobDomain getAttachmentFile() {
        return (BlobDomain)getAttributeInternal(ATTACHMENTFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttachmentFile.
     * @param value value to set the AttachmentFile
     */
    public void setAttachmentFile(BlobDomain value) {
        setAttributeInternal(ATTACHMENTFILE, value);
    }

    /**
     * Gets the attribute value for FileName, using the alias name FileName.
     * @return the FileName
     */
    public String getFileName() {
        return (String)getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileName.
     * @param value value to set the FileName
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for FileType, using the alias name FileType.
     * @return the FileType
     */
    public String getFileType() {
        return (String)getAttributeInternal(FILETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileType.
     * @param value value to set the FileType
     */
    public void setFileType(String value) {
        setAttributeInternal(FILETYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        this.setCreatedOn(new oracle.jbo.domain.Date(new oracle.jbo.domain.Date().getCurrentDate()));
        this.setLastUpdatedOn(new oracle.jbo.domain.Date(new oracle.jbo.domain.Date().getCurrentDate()));
        this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName")==null ? "" :ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setCreatedBy(ADFContext.getCurrent().getSessionScope().get("userName")==null ? "" :ADFContext.getCurrent().getSessionScope().get("userName").toString());
        
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == EntityImpl.DML_UPDATE) {
            this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName")==null ? "" :ADFContext.getCurrent().getSessionScope().get("userName").toString());
            this.setLastUpdatedOn(new oracle.jbo.domain.Date(new oracle.jbo.domain.Date().getCurrentDate()));
        }
        super.doDML(operation, e);
    }
}
