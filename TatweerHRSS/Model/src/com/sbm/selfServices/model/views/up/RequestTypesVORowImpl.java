package com.sbm.selfServices.model.views.up;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 04 14:22:15 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RequestTypesVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        EmailNotification {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getEmailNotification();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setEmailNotification((String)value);
            }
        }
        ,
        RequestName {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getRequestName();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setRequestName((String)value);
            }
        }
        ,
        RequestTypeId {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getRequestTypeId();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setRequestTypeId((Number)value);
            }
        }
        ,
        EmailNotificationTrans {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getEmailNotificationTrans();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setEmailNotificationTrans((Boolean)value);
            }
        }
        ,
        FyiEmail {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getFyiEmail();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setFyiEmail((String)value);
            }
        }
        ,
        RequestVisible {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getRequestVisible();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setRequestVisible((String)value);
            }
        }
        ,
        ReqVisibleFlag {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getReqVisibleFlag();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setReqVisibleFlag((Boolean)value);
            }
        }
        ,
        RequestName1 {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getRequestName1();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setRequestName1((String)value);
            }
        }
        ,
        WithdrawFlag {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getWithdrawFlag();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setWithdrawFlag((String)value);
            }
        }
        ,
        EditFlag {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getEditFlag();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setEditFlag((String)value);
            }
        }
        ,
        WithdrawTrans {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getWithdrawTrans();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setWithdrawTrans((Boolean)value);
            }
        }
        ,
        UpdateTrans {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getUpdateTrans();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setUpdateTrans((Boolean)value);
            }
        }
        ,
        RequestType_ROVO {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getRequestType_ROVO();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RequestType_ROVOEmail {
            public Object get(RequestTypesVORowImpl obj) {
                return obj.getRequestType_ROVOEmail();
            }

            public void put(RequestTypesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(RequestTypesVORowImpl object);

        public abstract void put(RequestTypesVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EMAILNOTIFICATION = AttributesEnum.EmailNotification.index();
    public static final int REQUESTNAME = AttributesEnum.RequestName.index();
    public static final int REQUESTTYPEID = AttributesEnum.RequestTypeId.index();
    public static final int EMAILNOTIFICATIONTRANS = AttributesEnum.EmailNotificationTrans.index();
    public static final int FYIEMAIL = AttributesEnum.FyiEmail.index();
    public static final int REQUESTVISIBLE = AttributesEnum.RequestVisible.index();
    public static final int REQVISIBLEFLAG = AttributesEnum.ReqVisibleFlag.index();
    public static final int REQUESTNAME1 = AttributesEnum.RequestName1.index();
    public static final int WITHDRAWFLAG = AttributesEnum.WithdrawFlag.index();
    public static final int EDITFLAG = AttributesEnum.EditFlag.index();
    public static final int WITHDRAWTRANS = AttributesEnum.WithdrawTrans.index();
    public static final int UPDATETRANS = AttributesEnum.UpdateTrans.index();
    public static final int REQUESTTYPE_ROVO = AttributesEnum.RequestType_ROVO.index();
    public static final int REQUESTTYPE_ROVOEMAIL = AttributesEnum.RequestType_ROVOEmail.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RequestTypesVORowImpl() {
    }

    /**
     * Gets RequestTypesEO entity object.
     * @return the RequestTypesEO
     */
    public EntityImpl getRequestTypesEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for EMAIL_NOTIFICATION using the alias name EmailNotification.
     * @return the EMAIL_NOTIFICATION
     */
    public String getEmailNotification() {
        return (String) getAttributeInternal(EMAILNOTIFICATION);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL_NOTIFICATION using the alias name EmailNotification.
     * @param value value to set the EMAIL_NOTIFICATION
     */
    public void setEmailNotification(String value) {
        setAttributeInternal(EMAILNOTIFICATION, value);
    }

    /**
     * Gets the attribute value for REQUEST_NAME using the alias name RequestName.
     * @return the REQUEST_NAME
     */
    public String getRequestName() {
        return (String) getAttributeInternal(REQUESTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_NAME using the alias name RequestName.
     * @param value value to set the REQUEST_NAME
     */
    public void setRequestName(String value) {
        setAttributeInternal(REQUESTNAME, value);
    }

    /**
     * Gets the attribute value for REQUEST_TYPE_ID using the alias name RequestTypeId.
     * @return the REQUEST_TYPE_ID
     */
    public Number getRequestTypeId() {
        return (Number) getAttributeInternal(REQUESTTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_TYPE_ID using the alias name RequestTypeId.
     * @param value value to set the REQUEST_TYPE_ID
     */
    public void setRequestTypeId(Number value) {
        setAttributeInternal(REQUESTTYPEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmailNotificationTrans.
     * @return the EmailNotificationTrans
     */
    public Boolean getEmailNotificationTrans() {
        Boolean flag = false;
        if (getEmailNotification() != null &&
            getEmailNotification().equals("Y")) {
            flag = true;
        } else {
            flag = false;
        }
        return flag;
//        return (Boolean) getAttributeInternal(EMAILNOTIFICATIONTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmailNotificationTrans.
     * @param value value to set the  EmailNotificationTrans
     */
    public void setEmailNotificationTrans(Boolean value) {
        if (value) {
            setEmailNotification("Y");
        } else {
            setEmailNotification("N");
        }
//        setAttributeInternal(EMAILNOTIFICATIONTRANS, value);
    }

    /**
     * Gets the attribute value for FYI_EMAIL using the alias name FyiEmail.
     * @return the FYI_EMAIL
     */
    public String getFyiEmail() {
        return (String) getAttributeInternal(FYIEMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for FYI_EMAIL using the alias name FyiEmail.
     * @param value value to set the FYI_EMAIL
     */
    public void setFyiEmail(String value) {
        setAttributeInternal(FYIEMAIL, value);
    }

    /**
     * Gets the attribute value for REQUEST_VISIBLE using the alias name RequestVisible.
     * @return the REQUEST_VISIBLE
     */
    public String getRequestVisible() {
        return (String) getAttributeInternal(REQUESTVISIBLE);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_VISIBLE using the alias name RequestVisible.
     * @param value value to set the REQUEST_VISIBLE
     */
    public void setRequestVisible(String value) {
        setAttributeInternal(REQUESTVISIBLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReqVisibleFlag.
     * @return the ReqVisibleFlag
     */
    public Boolean getReqVisibleFlag() {
        Boolean visible = false;
        if (getRequestVisible() != null &&
            getRequestVisible().equals("Y")) {
            visible = true;
        } else {
            visible = false;
        }
        return visible;
//        return (String) getAttributeInternal(REQVISIBLEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReqVisibleFlag.
     * @param value value to set the  ReqVisibleFlag
     */
    public void setReqVisibleFlag(Boolean value) {
        if (value) {
            setRequestVisible("Y");
        } else {
            setRequestVisible("N");
        }
        setAttributeInternal(REQVISIBLEFLAG, value);
    }

    /**
     * Gets the attribute value for REQUEST_NAME using the alias name RequestName1.
     * @return the REQUEST_NAME
     */
    public String getRequestName1() {
        return (String) getAttributeInternal(REQUESTNAME1);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_NAME using the alias name RequestName1.
     * @param value value to set the REQUEST_NAME
     */
    public void setRequestName1(String value) {
        setAttributeInternal(REQUESTNAME1, value);
    }

    /**
     * Gets the attribute value for WITHDRAW_FLAG using the alias name WithdrawFlag.
     * @return the WITHDRAW_FLAG
     */
    public String getWithdrawFlag() {
        return (String) getAttributeInternal(WITHDRAWFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for WITHDRAW_FLAG using the alias name WithdrawFlag.
     * @param value value to set the WITHDRAW_FLAG
     */
    public void setWithdrawFlag(String value) {
        setAttributeInternal(WITHDRAWFLAG, value);
    }

    /**
     * Gets the attribute value for EDIT_FLAG using the alias name EditFlag.
     * @return the EDIT_FLAG
     */
        public String getEditFlag() {
        return (String) getAttributeInternal(EDITFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for EDIT_FLAG using the alias name EditFlag.
     * @param value value to set the EDIT_FLAG
     */
    public void setEditFlag(String value) {
        setAttributeInternal(EDITFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WithdrawTrans.
     * @return the WithdrawTrans
     */
    public Boolean getWithdrawTrans() {
            Boolean flag = false;
                if (getWithdrawFlag() != null &&
                    getWithdrawFlag().equals("Y")) {
                    flag = true;
                } else {
                    flag = false;
                }
                return flag;
//        return (Boolean) getAttributeInternal(WITHDRAWTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WithdrawTrans.
     * @param value value to set the  WithdrawTrans
     */
    public void setWithdrawTrans(Boolean value) {
        if (value) {
                    setWithdrawFlag("Y");
                } else {
                    setWithdrawFlag("N");
         }
//        setAttributeInternal(WITHDRAWTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdateTrans.
     * @return the UpdateTrans
     */
    public Boolean getUpdateTrans() {
        Boolean flag = false;
                if (getEditFlag() != null &&
                    getEditFlag().equals("Y")) {
                    flag = true;
                } else {
                    flag = false;
                }
                return flag;
//        return (Boolean) getAttributeInternal(UPDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdateTrans.
     * @param value value to set the  UpdateTrans
     */
    public void setUpdateTrans(Boolean value) {
        if (value) {
                    setEditFlag("Y");
                } else {
                    setEditFlag("N");
                }
//        setAttributeInternal(UPDATETRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RequestType_ROVO.
     */
    public RowSet getRequestType_ROVO() {
        return (RowSet)getAttributeInternal(REQUESTTYPE_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RequestType_ROVOEmail.
     */
    public RowSet getRequestType_ROVOEmail() {
        return (RowSet)getAttributeInternal(REQUESTTYPE_ROVOEMAIL);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
