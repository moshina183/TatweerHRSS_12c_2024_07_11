package com.sbm.selfServices.model.views.up;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 02 04:58:17 EEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LoanRequestViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        LoanId {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getLoanId();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setLoanId((DBSequence)value);
            }
        }
        ,
        NoOfMonths {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getNoOfMonths();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setNoOfMonths((Number)value);
            }
        }
        ,
        Division {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getDivision();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setDivision((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        PersonId {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getPersonId();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setPersonId((String)value);
            }
        }
        ,
        StepId {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getStepId();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setStepId((Long)value);
            }
        }
        ,
        PersonName {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getPersonName();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setPersonName((String)value);
            }
        }
        ,
        RequestStatus {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getRequestStatus();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setRequestStatus((String)value);
            }
        }
        ,
        RejectComment {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getRejectComment();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setRejectComment((String)value);
            }
        }
        ,
        Assignee {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getAssignee();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setAssignee((String)value);
            }
        }
        ,
        CancelReason {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getCancelReason();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setCancelReason((String)value);
            }
        }
        ,
        AssigneeName {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getAssigneeName();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setAssigneeName((String)value);
            }
        }
        ,
        PersonDepartment {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getPersonDepartment();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setPersonDepartment((String)value);
            }
        }
        ,
        PersonGrade {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getPersonGrade();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setPersonGrade((String)value);
            }
        }
        ,
        PersonJob {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getPersonJob();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setPersonJob((String)value);
            }
        }
        ,
        PersonLocation {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getPersonLocation();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setPersonLocation((String)value);
            }
        }
        ,
        PersonPosition {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getPersonPosition();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setPersonPosition((String)value);
            }
        }
        ,
        BasicSalary {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getBasicSalary();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setBasicSalary((Number)value);
            }
        }
        ,
        EmpBasicSalary {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getEmpBasicSalary();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setEmpBasicSalary((String)value);
            }
        }
        ,
        TotalAmount {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getTotalAmount();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setTotalAmount((String)value);
            }
        }
        ,
        YearEnd {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getYearEnd();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setYearEnd((Date)value);
            }
        }
        ,
        AmountInYear {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getAmountInYear();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setAmountInYear((Number)value);
            }
        }
        ,
        CreationDatePlusYear {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getCreationDatePlusYear();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setCreationDatePlusYear((Date)value);
            }
        }
        ,
        ActionTaken {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getActionTaken();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setActionTaken((String)value);
            }
        }
        ,
        EditRequest {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getEditRequest();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setEditRequest((String)value);
            }
        }
        ,
        LoanAttachmentsView {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getLoanAttachmentsView();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ApprovalHistoryVO {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getApprovalHistoryVO();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        NoOfMonths1 {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getNoOfMonths1();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Division1 {
            public Object get(LoanRequestViewRowImpl obj) {
                return obj.getDivision1();
            }

            public void put(LoanRequestViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(LoanRequestViewRowImpl object);

        public abstract void put(LoanRequestViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LOANID = AttributesEnum.LoanId.index();
    public static final int NOOFMONTHS = AttributesEnum.NoOfMonths.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int PERSONID = AttributesEnum.PersonId.index();
    public static final int STEPID = AttributesEnum.StepId.index();
    public static final int PERSONNAME = AttributesEnum.PersonName.index();
    public static final int REQUESTSTATUS = AttributesEnum.RequestStatus.index();
    public static final int REJECTCOMMENT = AttributesEnum.RejectComment.index();
    public static final int ASSIGNEE = AttributesEnum.Assignee.index();
    public static final int CANCELREASON = AttributesEnum.CancelReason.index();
    public static final int ASSIGNEENAME = AttributesEnum.AssigneeName.index();
    public static final int PERSONDEPARTMENT = AttributesEnum.PersonDepartment.index();
    public static final int PERSONGRADE = AttributesEnum.PersonGrade.index();
    public static final int PERSONJOB = AttributesEnum.PersonJob.index();
    public static final int PERSONLOCATION = AttributesEnum.PersonLocation.index();
    public static final int PERSONPOSITION = AttributesEnum.PersonPosition.index();
    public static final int BASICSALARY = AttributesEnum.BasicSalary.index();
    public static final int EMPBASICSALARY = AttributesEnum.EmpBasicSalary.index();
    public static final int TOTALAMOUNT = AttributesEnum.TotalAmount.index();
    public static final int YEAREND = AttributesEnum.YearEnd.index();
    public static final int AMOUNTINYEAR = AttributesEnum.AmountInYear.index();
    public static final int CREATIONDATEPLUSYEAR = AttributesEnum.CreationDatePlusYear.index();
    public static final int ACTIONTAKEN = AttributesEnum.ActionTaken.index();
    public static final int EDITREQUEST = AttributesEnum.EditRequest.index();
    public static final int LOANATTACHMENTSVIEW = AttributesEnum.LoanAttachmentsView.index();
    public static final int APPROVALHISTORYVO = AttributesEnum.ApprovalHistoryVO.index();
    public static final int NOOFMONTHS1 = AttributesEnum.NoOfMonths1.index();
    public static final int DIVISION1 = AttributesEnum.Division1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LoanRequestViewRowImpl() {
    }

    /**
     * Gets LoanRequest entity object.
     * @return the LoanRequest
     */
    public EntityImpl getLoanRequest() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for LOAN_ID using the alias name LoanId.
     * @return the LOAN_ID
     */
    public DBSequence getLoanId() {
        return (DBSequence)getAttributeInternal(LOANID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOAN_ID using the alias name LoanId.
     * @param value value to set the LOAN_ID
     */
    public void setLoanId(DBSequence value) {
        setAttributeInternal(LOANID, value);
    }

    /**
     * Gets the attribute value for NO_OF_MONTHS using the alias name NoOfMonths.
     * @return the NO_OF_MONTHS
     */
    public Number getNoOfMonths() {
        return (Number) getAttributeInternal(NOOFMONTHS);
    }

    /**
     * Sets <code>value</code> as attribute value for NO_OF_MONTHS using the alias name NoOfMonths.
     * @param value value to set the NO_OF_MONTHS
     */
    public void setNoOfMonths(Number value) {
        setAttributeInternal(NOOFMONTHS, value);
    }

    /**
     * Gets the attribute value for DIVISION using the alias name Division.
     * @return the DIVISION
     */
    public Number getDivision() {
        return (Number) getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as attribute value for DIVISION using the alias name Division.
     * @param value value to set the DIVISION
     */
    public void setDivision(Number value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for PERSON_ID using the alias name PersonId.
     * @return the PERSON_ID
     */
    public String getPersonId() {
        return (String) getAttributeInternal(PERSONID);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_ID using the alias name PersonId.
     * @param value value to set the PERSON_ID
     */
    public void setPersonId(String value) {
        setAttributeInternal(PERSONID, value);
    }

    /**
     * Gets the attribute value for STEP_ID using the alias name StepId.
     * @return the STEP_ID
     */
    public Long getStepId() {
        return (Long) getAttributeInternal(STEPID);
    }

    /**
     * Sets <code>value</code> as attribute value for STEP_ID using the alias name StepId.
     * @param value value to set the STEP_ID
     */
    public void setStepId(Long value) {
        setAttributeInternal(STEPID, value);
    }

    /**
     * Gets the attribute value for PERSON_NAME using the alias name PersonName.
     * @return the PERSON_NAME
     */
    public String getPersonName() {
        return (String) getAttributeInternal(PERSONNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_NAME using the alias name PersonName.
     * @param value value to set the PERSON_NAME
     */
    public void setPersonName(String value) {
        setAttributeInternal(PERSONNAME, value);
    }

    /**
     * Gets the attribute value for REQUEST_STATUS using the alias name RequestStatus.
     * @return the REQUEST_STATUS
     */
    public String getRequestStatus() {
        return (String) getAttributeInternal(REQUESTSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_STATUS using the alias name RequestStatus.
     * @param value value to set the REQUEST_STATUS
     */
    public void setRequestStatus(String value) {
        setAttributeInternal(REQUESTSTATUS, value);
    }

    /**
     * Gets the attribute value for REJECT_COMMENT using the alias name RejectComment.
     * @return the REJECT_COMMENT
     */
    public String getRejectComment() {
        return (String) getAttributeInternal(REJECTCOMMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for REJECT_COMMENT using the alias name RejectComment.
     * @param value value to set the REJECT_COMMENT
     */
    public void setRejectComment(String value) {
        setAttributeInternal(REJECTCOMMENT, value);
    }

    /**
     * Gets the attribute value for ASSIGNEE using the alias name Assignee.
     * @return the ASSIGNEE
     */
    public String getAssignee() {
        return (String) getAttributeInternal(ASSIGNEE);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSIGNEE using the alias name Assignee.
     * @param value value to set the ASSIGNEE
     */
    public void setAssignee(String value) {
        setAttributeInternal(ASSIGNEE, value);
    }

    /**
     * Gets the attribute value for CANCEL_REASON using the alias name CancelReason.
     * @return the CANCEL_REASON
     */
    public String getCancelReason() {
        return (String) getAttributeInternal(CANCELREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for CANCEL_REASON using the alias name CancelReason.
     * @param value value to set the CANCEL_REASON
     */
    public void setCancelReason(String value) {
        setAttributeInternal(CANCELREASON, value);
    }

    /**
     * Gets the attribute value for ASSIGNEE_NAME using the alias name AssigneeName.
     * @return the ASSIGNEE_NAME
     */
    public String getAssigneeName() {
        return (String) getAttributeInternal(ASSIGNEENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSIGNEE_NAME using the alias name AssigneeName.
     * @param value value to set the ASSIGNEE_NAME
     */
    public void setAssigneeName(String value) {
        setAttributeInternal(ASSIGNEENAME, value);
    }

    /**
     * Gets the attribute value for PERSON_DEPARTMENT using the alias name PersonDepartment.
     * @return the PERSON_DEPARTMENT
     */
    public String getPersonDepartment() {
        return (String) getAttributeInternal(PERSONDEPARTMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_DEPARTMENT using the alias name PersonDepartment.
     * @param value value to set the PERSON_DEPARTMENT
     */
    public void setPersonDepartment(String value) {
        setAttributeInternal(PERSONDEPARTMENT, value);
    }

    /**
     * Gets the attribute value for PERSON_GRADE using the alias name PersonGrade.
     * @return the PERSON_GRADE
     */
    public String getPersonGrade() {
        return (String) getAttributeInternal(PERSONGRADE);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_GRADE using the alias name PersonGrade.
     * @param value value to set the PERSON_GRADE
     */
    public void setPersonGrade(String value) {
        setAttributeInternal(PERSONGRADE, value);
    }

    /**
     * Gets the attribute value for PERSON_JOB using the alias name PersonJob.
     * @return the PERSON_JOB
     */
    public String getPersonJob() {
        return (String) getAttributeInternal(PERSONJOB);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_JOB using the alias name PersonJob.
     * @param value value to set the PERSON_JOB
     */
    public void setPersonJob(String value) {
        setAttributeInternal(PERSONJOB, value);
    }

    /**
     * Gets the attribute value for PERSON_LOCATION using the alias name PersonLocation.
     * @return the PERSON_LOCATION
     */
    public String getPersonLocation() {
        return (String) getAttributeInternal(PERSONLOCATION);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_LOCATION using the alias name PersonLocation.
     * @param value value to set the PERSON_LOCATION
     */
    public void setPersonLocation(String value) {
        setAttributeInternal(PERSONLOCATION, value);
    }

    /**
     * Gets the attribute value for PERSON_POSITION using the alias name PersonPosition.
     * @return the PERSON_POSITION
     */
    public String getPersonPosition() {
        return (String) getAttributeInternal(PERSONPOSITION);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_POSITION using the alias name PersonPosition.
     * @param value value to set the PERSON_POSITION
     */
    public void setPersonPosition(String value) {
        setAttributeInternal(PERSONPOSITION, value);
    }

    /**
     * Gets the attribute value for BASIC_SALARY using the alias name BasicSalary.
     * @return the BASIC_SALARY
     */
    public Number getBasicSalary() {
        return (Number) getAttributeInternal(BASICSALARY);
    }

    /**
     * Sets <code>value</code> as attribute value for BASIC_SALARY using the alias name BasicSalary.
     * @param value value to set the BASIC_SALARY
     */
    public void setBasicSalary(Number value) {
        setAttributeInternal(BASICSALARY, value);
    }

    /**
     * Gets the attribute value for EMP_BASIC_SALARY using the alias name EmpBasicSalary.
     * @return the EMP_BASIC_SALARY
     */
    public String getEmpBasicSalary() {
        return (String) getAttributeInternal(EMPBASICSALARY);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_BASIC_SALARY using the alias name EmpBasicSalary.
     * @param value value to set the EMP_BASIC_SALARY
     */
    public void setEmpBasicSalary(String value) {
        setAttributeInternal(EMPBASICSALARY, value);
    }

    /**
     * Gets the attribute value for TOTAL_AMOUNT using the alias name TotalAmount.
     * @return the TOTAL_AMOUNT
     */
    public String getTotalAmount() {
        return (String) getAttributeInternal(TOTALAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_AMOUNT using the alias name TotalAmount.
     * @param value value to set the TOTAL_AMOUNT
     */
    public void setTotalAmount(String value) {
        setAttributeInternal(TOTALAMOUNT, value);
    }

    /**
     * Gets the attribute value for YEAR_END using the alias name YearEnd.
     * @return the YEAR_END
     */
    public Date getYearEnd() {
        return (Date) getAttributeInternal(YEAREND);
    }

    /**
     * Sets <code>value</code> as attribute value for YEAR_END using the alias name YearEnd.
     * @param value value to set the YEAR_END
     */
    public void setYearEnd(Date value) {
        setAttributeInternal(YEAREND, value);
    }

    /**
     * Gets the attribute value for AMOUNT_IN_YEAR using the alias name AmountInYear.
     * @return the AMOUNT_IN_YEAR
     */
    public Number getAmountInYear() {
        return (Number) getAttributeInternal(AMOUNTINYEAR);
    }

    /**
     * Sets <code>value</code> as attribute value for AMOUNT_IN_YEAR using the alias name AmountInYear.
     * @param value value to set the AMOUNT_IN_YEAR
     */
    public void setAmountInYear(Number value) {
        setAttributeInternal(AMOUNTINYEAR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreationDatePlusYear.
     * @return the CreationDatePlusYear
     */
    public Date getCreationDatePlusYear() {
        return (Date) getAttributeInternal(CREATIONDATEPLUSYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreationDatePlusYear.
     * @param value value to set the  CreationDatePlusYear
     */
    public void setCreationDatePlusYear(Date value) {
        setAttributeInternal(CREATIONDATEPLUSYEAR, value);
    }

    /**
     * Gets the attribute value for ACTION_TAKEN using the alias name ActionTaken.
     * @return the ACTION_TAKEN
     */
    public String getActionTaken() {
        return (String) getAttributeInternal(ACTIONTAKEN);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTION_TAKEN using the alias name ActionTaken.
     * @param value value to set the ACTION_TAKEN
     */
    public void setActionTaken(String value) {
        setAttributeInternal(ACTIONTAKEN, value);
    }

    /**
     * Gets the attribute value for EDIT_REQUEST using the alias name EditRequest.
     * @return the EDIT_REQUEST
     */
    public String getEditRequest() {
        return (String) getAttributeInternal(EDITREQUEST);
    }

    /**
     * Sets <code>value</code> as attribute value for EDIT_REQUEST using the alias name EditRequest.
     * @param value value to set the EDIT_REQUEST
     */
    public void setEditRequest(String value) {
        setAttributeInternal(EDITREQUEST, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link LoanAttachmentsView.
     */
    public Row getLoanAttachmentsView() {
        return (Row)getAttributeInternal(LOANATTACHMENTSVIEW);
    }

    /**
     * Sets the master-detail link LoanAttachmentsView between this object and <code>value</code>.
     */
    public void setLoanAttachmentsView(Row value) {
        setAttributeInternal(LOANATTACHMENTSVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ApprovalHistoryVO.
     */
    public RowIterator getApprovalHistoryVO() {
        return (RowIterator)getAttributeInternal(APPROVALHISTORYVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> NoOfMonths1.
     */
    public RowSet getNoOfMonths1() {
        return (RowSet)getAttributeInternal(NOOFMONTHS1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Division1.
     */
    public RowSet getDivision1() {
        return (RowSet)getAttributeInternal(DIVISION1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
