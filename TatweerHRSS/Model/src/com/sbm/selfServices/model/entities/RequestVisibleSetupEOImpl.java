package com.sbm.selfServices.model.entities;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 23 16:41:59 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RequestVisibleSetupEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RequestSetupId {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getRequestSetupId();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setRequestSetupId((Number)value);
            }
        }
        ,
        RequestTypeId {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getRequestTypeId();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setRequestTypeId((Number)value);
            }
        }
        ,
        LocationsId {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getLocationsId();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setLocationsId((Number)value);
            }
        }
        ,
        ReqVisibleFlag {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getReqVisibleFlag();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setReqVisibleFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        CreatedOn {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getCreatedOn();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setCreatedOn((Date)value);
            }
        }
        ,
        LastUpdatedOn {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getLastUpdatedOn();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setLastUpdatedOn((Date)value);
            }
        }
        ,
        Location {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getLocation();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setLocation((String)value);
            }
        }
        ,
        LocationsEO {
            public Object get(RequestVisibleSetupEOImpl obj) {
                return obj.getLocationsEO();
            }

            public void put(RequestVisibleSetupEOImpl obj, Object value) {
                obj.setLocationsEO((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(RequestVisibleSetupEOImpl object);

        public abstract void put(RequestVisibleSetupEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int REQUESTSETUPID = AttributesEnum.RequestSetupId.index();
    public static final int REQUESTTYPEID = AttributesEnum.RequestTypeId.index();
    public static final int LOCATIONSID = AttributesEnum.LocationsId.index();
    public static final int REQVISIBLEFLAG = AttributesEnum.ReqVisibleFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATEDON = AttributesEnum.CreatedOn.index();
    public static final int LASTUPDATEDON = AttributesEnum.LastUpdatedOn.index();
    public static final int LOCATION = AttributesEnum.Location.index();
    public static final int LOCATIONSEO = AttributesEnum.LocationsEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RequestVisibleSetupEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sbm.selfServices.model.entities.RequestVisibleSetupEO");
    }

    /**
     * Gets the attribute value for RequestSetupId, using the alias name RequestSetupId.
     * @return the RequestSetupId
     */
    public Number getRequestSetupId() {
        return (Number)getAttributeInternal(REQUESTSETUPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestSetupId.
     * @param value value to set the RequestSetupId
     */
    public void setRequestSetupId(Number value) {
        setAttributeInternal(REQUESTSETUPID, value);
    }

    /**
     * Gets the attribute value for RequestTypeId, using the alias name RequestTypeId.
     * @return the RequestTypeId
     */
    public Number getRequestTypeId() {
        return (Number)getAttributeInternal(REQUESTTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestTypeId.
     * @param value value to set the RequestTypeId
     */
    public void setRequestTypeId(Number value) {
        setAttributeInternal(REQUESTTYPEID, value);
    }

    /**
     * Gets the attribute value for LocationsId, using the alias name LocationsId.
     * @return the LocationsId
     */
    public Number getLocationsId() {
        return (Number)getAttributeInternal(LOCATIONSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationsId.
     * @param value value to set the LocationsId
     */
    public void setLocationsId(Number value) {
        setAttributeInternal(LOCATIONSID, value);
    }

    /**
     * Gets the attribute value for ReqVisibleFlag, using the alias name ReqVisibleFlag.
     * @return the ReqVisibleFlag
     */
    public String getReqVisibleFlag() {
        return (String)getAttributeInternal(REQVISIBLEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqVisibleFlag.
     * @param value value to set the ReqVisibleFlag
     */
    public void setReqVisibleFlag(String value) {
        setAttributeInternal(REQVISIBLEFLAG, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedOn, using the alias name CreatedOn.
     * @return the CreatedOn
     */
    public Date getCreatedOn() {
        return (Date)getAttributeInternal(CREATEDON);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedOn.
     * @param value value to set the CreatedOn
     */
    public void setCreatedOn(Date value) {
        setAttributeInternal(CREATEDON, value);
    }

    /**
     * Gets the attribute value for LastUpdatedOn, using the alias name LastUpdatedOn.
     * @return the LastUpdatedOn
     */
    public Date getLastUpdatedOn() {
        return (Date)getAttributeInternal(LASTUPDATEDON);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedOn.
     * @param value value to set the LastUpdatedOn
     */
    public void setLastUpdatedOn(Date value) {
        setAttributeInternal(LASTUPDATEDON, value);
    }

    /**
     * Gets the attribute value for Location, using the alias name Location.
     * @return the Location
     */
    public String getLocation() {
        return (String)getAttributeInternal(LOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Location.
     * @param value value to set the Location
     */
    public void setLocation(String value) {
        setAttributeInternal(LOCATION, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getLocationsEO() {
        return (EntityImpl)getAttributeInternal(LOCATIONSEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setLocationsEO(EntityImpl value) {
        setAttributeInternal(LOCATIONSEO, value);
    }


    /**
     * @param requestSetupId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number requestSetupId) {
        return new Key(new Object[]{requestSetupId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        SequenceImpl seq = new SequenceImpl("REQUEST_VISIBLE_SEQ", this.getDBTransaction());
        this.setRequestSetupId(seq.getSequenceNumber()); 
        
        this.setCreatedOn(new oracle.jbo.domain.Date());
        this.setLastUpdatedOn(new oracle.jbo.domain.Date());
        this.setCreatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == EntityImpl.DML_UPDATE) {
            this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName")==null ? "" :ADFContext.getCurrent().getSessionScope().get("userName").toString());
            this.setLastUpdatedOn(new oracle.jbo.domain.Date());
        }
        super.doDML(operation, e);
    }
}
