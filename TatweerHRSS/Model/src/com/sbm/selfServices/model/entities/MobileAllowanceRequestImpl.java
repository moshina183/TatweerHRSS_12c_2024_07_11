package com.sbm.selfServices.model.entities;

import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 26 14:49:33 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MobileAllowanceRequestImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RequestId {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getRequestId();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setRequestId((DBSequence) value);
            }
        }
        ,
        PersoneNumber {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getPersoneNumber();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setPersoneNumber((String) value);
            }
        }
        ,
        StepId {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getStepId();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setStepId((Long) value);
            }
        }
        ,
        PersoneName {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getPersoneName();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setPersoneName((String) value);
            }
        }
        ,
        RequestStatus {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getRequestStatus();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setRequestStatus((String) value);
            }
        }
        ,
        RejectComments {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getRejectComments();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setRejectComments((String) value);
            }
        }
        ,
        Assignee {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getAssignee();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setAssignee((String) value);
            }
        }
        ,
        RequestReason {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getRequestReason();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setRequestReason((String) value);
            }
        }
        ,
        AssigneeName {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getAssigneeName();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setAssigneeName((String) value);
            }
        }
        ,
        PersonDepartment {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getPersonDepartment();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setPersonDepartment((String) value);
            }
        }
        ,
        PersonGrade {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getPersonGrade();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setPersonGrade((String) value);
            }
        }
        ,
        PersonJob {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getPersonJob();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setPersonJob((String) value);
            }
        }
        ,
        PersonLocation {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getPersonLocation();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setPersonLocation((String) value);
            }
        }
        ,
        PersonPosition {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getPersonPosition();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setPersonPosition((String) value);
            }
        }
        ,
        CreationDate {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getCreationDate();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setCreationDate((Date) value);
            }
        }
        ,
        ActionTaken {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getActionTaken();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setActionTaken((String) value);
            }
        }
        ,
        NumberOfMonths {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getNumberOfMonths();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setNumberOfMonths((Number) value);
            }
        }
        ,
        EditRequest {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getEditRequest();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setEditRequest((String) value);
            }
        }
        ,
        Amount {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getAmount();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setAmount((Number) value);
            }
        }
        ,
        CostCenterName {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getCostCenterName();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setCostCenterName((String) value);
            }
        }
        ,
        CostCenterNumber {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getCostCenterNumber();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setCostCenterNumber((String) value);
            }
        }
        ,
        Division {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getDivision();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setDivision((String) value);
            }
        }
        ,
        EffectiveEndDate {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getEffectiveEndDate();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setEffectiveEndDate((Date) value);
            }
        }
        ,
        EffectiveStartDate {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getEffectiveStartDate();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setEffectiveStartDate((Date) value);
            }
        }
        ,
        DepartmentNumber {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getDepartmentNumber();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setDepartmentNumber((String) value);
            }
        }
        ,
        HireType {
            protected Object get(MobileAllowanceRequestImpl obj) {
                return obj.getHireType();
            }

            protected void put(MobileAllowanceRequestImpl obj, Object value) {
                obj.setHireType((String) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;


        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }


        protected abstract Object get(MobileAllowanceRequestImpl object);

        protected abstract void put(MobileAllowanceRequestImpl object, Object value);
    }


    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int PERSONENUMBER = AttributesEnum.PersoneNumber.index();
    public static final int STEPID = AttributesEnum.StepId.index();
    public static final int PERSONENAME = AttributesEnum.PersoneName.index();
    public static final int REQUESTSTATUS = AttributesEnum.RequestStatus.index();
    public static final int REJECTCOMMENTS = AttributesEnum.RejectComments.index();
    public static final int ASSIGNEE = AttributesEnum.Assignee.index();
    public static final int REQUESTREASON = AttributesEnum.RequestReason.index();
    public static final int ASSIGNEENAME = AttributesEnum.AssigneeName.index();
    public static final int PERSONDEPARTMENT = AttributesEnum.PersonDepartment.index();
    public static final int PERSONGRADE = AttributesEnum.PersonGrade.index();
    public static final int PERSONJOB = AttributesEnum.PersonJob.index();
    public static final int PERSONLOCATION = AttributesEnum.PersonLocation.index();
    public static final int PERSONPOSITION = AttributesEnum.PersonPosition.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int ACTIONTAKEN = AttributesEnum.ActionTaken.index();
    public static final int NUMBEROFMONTHS = AttributesEnum.NumberOfMonths.index();
    public static final int EDITREQUEST = AttributesEnum.EditRequest.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int COSTCENTERNAME = AttributesEnum.CostCenterName.index();
    public static final int COSTCENTERNUMBER = AttributesEnum.CostCenterNumber.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int DEPARTMENTNUMBER = AttributesEnum.DepartmentNumber.index();
    public static final int HIRETYPE = AttributesEnum.HireType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MobileAllowanceRequestImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sbm.selfServices.model.entities.MobileAllowanceRequest");
    }


    @Override
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }


    /**
     * Gets the attribute value for RequestId, using the alias name RequestId.
     * @return the RequestId
     */
    public DBSequence getRequestId() {
        return (DBSequence)getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestId.
     * @param value value to set the RequestId
     */
    public void setRequestId(DBSequence value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for PersoneNumber, using the alias name PersoneNumber.
     * @return the PersoneNumber
     */
    public String getPersoneNumber() {
        return (String)getAttributeInternal(PERSONENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersoneNumber.
     * @param value value to set the PersoneNumber
     */
    public void setPersoneNumber(String value) {
        setAttributeInternal(PERSONENUMBER, value);
    }

    /**
     * Gets the attribute value for StepId, using the alias name StepId.
     * @return the StepId
     */
    public Long getStepId() {
        return (Long)getAttributeInternal(STEPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StepId.
     * @param value value to set the StepId
     */
    public void setStepId(Long value) {
        setAttributeInternal(STEPID, value);
    }

    /**
     * Gets the attribute value for PersoneName, using the alias name PersoneName.
     * @return the PersoneName
     */
    public String getPersoneName() {
        return (String)getAttributeInternal(PERSONENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersoneName.
     * @param value value to set the PersoneName
     */
    public void setPersoneName(String value) {
        setAttributeInternal(PERSONENAME, value);
    }

    /**
     * Gets the attribute value for RequestStatus, using the alias name RequestStatus.
     * @return the RequestStatus
     */
    public String getRequestStatus() {
        return (String)getAttributeInternal(REQUESTSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestStatus.
     * @param value value to set the RequestStatus
     */
    public void setRequestStatus(String value) {
        setAttributeInternal(REQUESTSTATUS, value);
    }

    /**
     * Gets the attribute value for RejectComments, using the alias name RejectComments.
     * @return the RejectComments
     */
    public String getRejectComments() {
        return (String)getAttributeInternal(REJECTCOMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejectComments.
     * @param value value to set the RejectComments
     */
    public void setRejectComments(String value) {
        setAttributeInternal(REJECTCOMMENTS, value);
    }

    /**
     * Gets the attribute value for Assignee, using the alias name Assignee.
     * @return the Assignee
     */
    public String getAssignee() {
        return (String)getAttributeInternal(ASSIGNEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assignee.
     * @param value value to set the Assignee
     */
    public void setAssignee(String value) {
        setAttributeInternal(ASSIGNEE, value);
    }

    /**
     * Gets the attribute value for RequestReason, using the alias name RequestReason.
     * @return the RequestReason
     */
    public String getRequestReason() {
        return (String)getAttributeInternal(REQUESTREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestReason.
     * @param value value to set the RequestReason
     */
    public void setRequestReason(String value) {
        setAttributeInternal(REQUESTREASON, value);
    }

    /**
     * Gets the attribute value for AssigneeName, using the alias name AssigneeName.
     * @return the AssigneeName
     */
    public String getAssigneeName() {
        return (String)getAttributeInternal(ASSIGNEENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssigneeName.
     * @param value value to set the AssigneeName
     */
    public void setAssigneeName(String value) {
        setAttributeInternal(ASSIGNEENAME, value);
    }

    /**
     * Gets the attribute value for PersonDepartment, using the alias name PersonDepartment.
     * @return the PersonDepartment
     */
    public String getPersonDepartment() {
        return (String)getAttributeInternal(PERSONDEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonDepartment.
     * @param value value to set the PersonDepartment
     */
    public void setPersonDepartment(String value) {
        setAttributeInternal(PERSONDEPARTMENT, value);
    }

    /**
     * Gets the attribute value for PersonGrade, using the alias name PersonGrade.
     * @return the PersonGrade
     */
    public String getPersonGrade() {
        return (String)getAttributeInternal(PERSONGRADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonGrade.
     * @param value value to set the PersonGrade
     */
    public void setPersonGrade(String value) {
        setAttributeInternal(PERSONGRADE, value);
    }

    /**
     * Gets the attribute value for PersonJob, using the alias name PersonJob.
     * @return the PersonJob
     */
    public String getPersonJob() {
        return (String)getAttributeInternal(PERSONJOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonJob.
     * @param value value to set the PersonJob
     */
    public void setPersonJob(String value) {
        setAttributeInternal(PERSONJOB, value);
    }

    /**
     * Gets the attribute value for PersonLocation, using the alias name PersonLocation.
     * @return the PersonLocation
     */
    public String getPersonLocation() {
        return (String)getAttributeInternal(PERSONLOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonLocation.
     * @param value value to set the PersonLocation
     */
    public void setPersonLocation(String value) {
        setAttributeInternal(PERSONLOCATION, value);
    }

    /**
     * Gets the attribute value for PersonPosition, using the alias name PersonPosition.
     * @return the PersonPosition
     */
    public String getPersonPosition() {
        return (String)getAttributeInternal(PERSONPOSITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonPosition.
     * @param value value to set the PersonPosition
     */
    public void setPersonPosition(String value) {
        setAttributeInternal(PERSONPOSITION, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for ActionTaken, using the alias name ActionTaken.
     * @return the ActionTaken
     */
    public String getActionTaken() {
        return (String)getAttributeInternal(ACTIONTAKEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionTaken.
     * @param value value to set the ActionTaken
     */
    public void setActionTaken(String value) {
        setAttributeInternal(ACTIONTAKEN, value);
    }

    /**
     * Gets the attribute value for NumberOfMonths, using the alias name NumberOfMonths.
     * @return the NumberOfMonths
     */
    public Number getNumberOfMonths() {
        return (Number)getAttributeInternal(NUMBEROFMONTHS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfMonths.
     * @param value value to set the NumberOfMonths
     */
    public void setNumberOfMonths(Number value) {
        setAttributeInternal(NUMBEROFMONTHS, value);
    }

    /**
     * Gets the attribute value for EditRequest, using the alias name EditRequest.
     * @return the EditRequest
     */
    public String getEditRequest() {
        return (String)getAttributeInternal(EDITREQUEST);
    }

    /**
     * Sets <code>value</code> as the attribute value for EditRequest.
     * @param value value to set the EditRequest
     */
    public void setEditRequest(String value) {
        setAttributeInternal(EDITREQUEST, value);
    }

    /**
     * Gets the attribute value for Amount, using the alias name Amount.
     * @return the value of Amount
     */
    public Number getAmount() {
        return (Number) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Amount.
     * @param value value to set the Amount
     */
    public void setAmount(Number value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for CostCenterName, using the alias name CostCenterName.
     * @return the value of CostCenterName
     */
    public String getCostCenterName() {
        return (String) getAttributeInternal(COSTCENTERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CostCenterName.
     * @param value value to set the CostCenterName
     */
    public void setCostCenterName(String value) {
        setAttributeInternal(COSTCENTERNAME, value);
    }

    /**
     * Gets the attribute value for CostCenterNumber, using the alias name CostCenterNumber.
     * @return the value of CostCenterNumber
     */
    public String getCostCenterNumber() {
        return (String) getAttributeInternal(COSTCENTERNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CostCenterNumber.
     * @param value value to set the CostCenterNumber
     */
    public void setCostCenterNumber(String value) {
        setAttributeInternal(COSTCENTERNUMBER, value);
    }

    /**
     * Gets the attribute value for Division, using the alias name Division.
     * @return the value of Division
     */
    public String getDivision() {
        return (String) getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Division.
     * @param value value to set the Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate.
     * @return the value of EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveEndDate.
     * @param value value to set the EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate.
     * @return the value of EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveStartDate.
     * @param value value to set the EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for DepartmentNumber, using the alias name DepartmentNumber.
     * @return the value of DepartmentNumber
     */
    public String getDepartmentNumber() {
        return (String) getAttributeInternal(DEPARTMENTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentNumber.
     * @param value value to set the DepartmentNumber
     */
    public void setDepartmentNumber(String value) {
        setAttributeInternal(DEPARTMENTNUMBER, value);
    }

    /**
     * Gets the attribute value for HireType, using the alias name HireType.
     * @return the value of HireType
     */
    public String getHireType() {
        return (String) getAttributeInternal(HIRETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HireType.
     * @param value value to set the HireType
     */
    public void setHireType(String value) {
        setAttributeInternal(HIRETYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param requestId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence requestId) {
        return new Key(new Object[] { requestId });
    }


}
